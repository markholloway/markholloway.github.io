<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Mark Holloway</title>
 <link href="http://localhost:4000/atom.xml" rel="self"/>
 <link href="http://localhost:4000/"/>
 <updated>2019-03-08T15:24:29-05:00</updated>
 <id>http://localhost:4000</id>
 <author>
   <name></name>
   <email></email>
 </author>

 
 <entry>
   <title>Build and publish Autopilot BOT Assistants with Twilio's CLI tool</title>
   <link href="http://localhost:4000/2019/03/03/twilio-autopilot-cli/"/>
   <updated>2019-03-03T00:00:00-05:00</updated>
   <id>http://localhost:4000/2019/03/03/twilio-autopilot-cli</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/blog/assets/2019-03-03/ap-cli.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Twilio recently released a &lt;code class=&quot;highlighter-rouge&quot;&gt;CLI&lt;/code&gt; utility to build and manage Autopilot Assistants locally. This demonstrates how to setup credentials and publish an Assistant
&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;When building an Autopilot Assistant it’s typically done through the Twilio &lt;a href=&quot;http://www.twilio.com/console&quot;&gt;Console&lt;/a&gt;. What’s convenient about this is Twilio includes a &lt;code class=&quot;highlighter-rouge&quot;&gt;Test Your Assistant&lt;/code&gt; tool in the browser so it’s not necessary to dial in to a Twilio number for every test.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/2019-03-03/test-assistant.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;install-autopilot-cli-using-node-package-manager&quot;&gt;Install Autopilot CLI using Node Package Manager&lt;/h2&gt;

&lt;p&gt;Autopilot CLI is installed using &lt;code class=&quot;highlighter-rouge&quot;&gt;npm&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mark&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;npm install &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; @twilio/autopilot-cli
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In your terminal window enter &lt;code class=&quot;highlighter-rouge&quot;&gt;ta&lt;/code&gt; to see output like the picture above.&lt;/p&gt;

&lt;h2 id=&quot;configure-twilio-credentials&quot;&gt;Configure Twilio Credentials&lt;/h2&gt;

&lt;p&gt;Autopilot CLI needs the SID and Auth Token for the account where Assistants will reside. Use the &lt;code class=&quot;highlighter-rouge&quot;&gt;--credentials&lt;/code&gt; option when more than one account should be accessed from Autopilot CLI.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mark&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ta init

Please visit https://www.twilio.com/console
Fill &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the Twilio ACCOUNT SID and Twilio AUTH TOKEN below 
to save/modify your Twilio credentials.

? Twilio ACCOUNT SID:
 ACXXXXXXXXXXXXXXXXXXXXXXXXXX

? Twilio AUTH TOKEN:
 feXXXXXXXXXXXXXXXXXXXXXXXXXX
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Once credentials are successfully added the Autopilot CLI will communicate with the Twilio platform to perform CLI actions.&lt;/p&gt;

&lt;h2 id=&quot;list-current-assistants-associated-with-the-account-sid&quot;&gt;List Current Assistants Associated with the Account SID&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mark&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ta list

UA52e35a7976b5fea8e544ba8 Make_a_Reservation
UA1c59d8db97e01531ecc5d65 Schedule_an_Appointment
UAda134911d1bce1aa68f2698 SMS_WhatsApp_FB_Customer_Service_Bot 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To try a demo of &lt;code class=&quot;highlighter-rouge&quot;&gt;Schedule an Appointment&lt;/code&gt; dial &lt;code class=&quot;highlighter-rouge&quot;&gt;+1-213-319-4095&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;exporting-an-assistant-schema&quot;&gt;Exporting an Assistant Schema&lt;/h2&gt;

&lt;p&gt;I would like to check &lt;code class=&quot;highlighter-rouge&quot;&gt;Make a Reservation&lt;/code&gt; and see if there is more work to be done building the Assistant. To do this I must export the schema as JSON&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mark&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ta &lt;span class=&quot;nb&quot;&gt;export&lt;/span&gt;
? Choose your assistant:  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Use arrow keys&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
❯   Make_a_Reservation 
    Schedule_an_Appointment
    SMS_WhatsApp_FB_Customer_Service_Bot

Exporting Assistant......

File exported &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;Make_a_Reservation.json 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;view-exported-json&quot;&gt;View Exported JSON&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mark&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;more Make_a_Reservation.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Below is the conents that makes up the &lt;code class=&quot;highlighter-rouge&quot;&gt;Make a Reservation&lt;/code&gt; Assistant. It will be easiest to copy and paste into another application to view the entire contents of the file without scrolling.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;friendlyName&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Restaurant&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;logQueries&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;uniqueName&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Restaurant&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;defaults&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;defaults&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;assistant_initiation&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;task://initiation-task&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;fallback&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;task://initiation-task&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;collect&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;validate_on_failure&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;task://initiation-task&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;styleSheet&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;style_sheet&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;collect&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;validate&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;on_failure&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
						&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;repeat_question&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
						&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;messages&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
							&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
								&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;say&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;I'm sorry, can you please say that again&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
							&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
							&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
								&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;say&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hmm I still did'nt catch that, can you please repeat&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
							&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
							&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
								&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;say&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Let's give it one more try. Please say it one more time&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
							&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
						&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;on_success&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;say&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;max_attempts&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;voice&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;say_voice&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Polly.Matthew&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;fieldTypes&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;tasks&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;uniqueName&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;confirm-reservation&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;actions&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;actions&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
						&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;redirect&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
							&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;uri&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://sand-mallard-4168.twil.io/deep-table-make-reservation&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
						&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;fields&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;samples&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;language&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;en-US&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;taggedText&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;confirm reservation&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;uniqueName&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;make-reservation&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;actions&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;actions&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
						&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;collect&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
							&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;on_complete&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
								&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;redirect&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;task://confirm-reservation&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
							&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
							&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;make_reservation&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
							&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;questions&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
								&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
									&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Twilio.FIRST_NAME&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
									&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;question&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
										&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;say&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Great, I can help you with that. What's your first name?&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
									&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
									&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;first_name&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
								&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
								&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
									&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Twilio.DATE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
									&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;question&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
										&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;say&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;When day would you like your reservation for?&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
									&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
									&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;date&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
								&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
								&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
									&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Twilio.TIME&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
									&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;question&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
										&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;say&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Great at what time?&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
									&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
									&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;time&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
								&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
								&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
									&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Twilio.NUMBER&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
									&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;question&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
										&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;say&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;For how many people&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
									&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
									&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;party_size&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
								&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
							&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
						&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;fields&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;samples&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;language&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;en-US&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;taggedText&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;How do I make a reservation?&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;language&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;en-US&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;taggedText&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Can I make a reservation?&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;language&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;en-US&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;taggedText&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;I would like to make a reservation&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;language&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;en-US&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;taggedText&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;reservation tonight&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;language&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;en-US&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;taggedText&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;can i make a reservation&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;language&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;en-US&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;taggedText&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;reservations&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;language&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;en-US&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;taggedText&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;reservation for&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;language&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;en-US&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;taggedText&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;i would like to make a reservation&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;uniqueName&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;get-specials&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;actions&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;actions&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
						&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;say&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Today's special is seasoned prime rib with roasted mashed potatoes, super recommended, is there anything else I can help you with?&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;listen&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;fields&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;samples&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;language&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;en-US&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;taggedText&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;the specials for today&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;language&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;en-US&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;taggedText&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;specials&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;language&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;en-US&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;taggedText&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;get today's special&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;language&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;en-US&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;taggedText&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;today's special&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;language&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;en-US&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;taggedText&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dinner special&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;language&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;en-US&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;taggedText&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;I want today's special&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;language&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;en-US&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;taggedText&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;What's the special going on right now&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;language&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;en-US&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;taggedText&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;I would like to know what the specials are&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;language&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;en-US&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;taggedText&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Doyou have any specials today?&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;language&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;en-US&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;taggedText&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;What's today's specials?&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;uniqueName&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;initiation-task&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;actions&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;actions&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
						&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;say&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Welcome to Deep Table, the worlds smartest restaurant, I'm Deep Table's Virtual Assistant, I can tell you about todays special or help you make a reservation, What would you like to do today?&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;listen&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;fields&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;samples&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;language&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;en-US&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;taggedText&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Hi there&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;language&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;en-US&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
					&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;taggedText&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Hello&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;modelBuild&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;uniqueName&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;v0.10&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;modify-schema-and-publish-to-twilio&quot;&gt;Modify Schema and Publish to Twilio&lt;/h2&gt;

&lt;p&gt;Once changes have been completed it is very easy to publish them to Twilio&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;markh&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ta update &lt;span class=&quot;nt&quot;&gt;--schema&lt;/span&gt; Make_a_Reservation.json

Updating assistant.....

Assistant &lt;span class=&quot;s2&quot;&gt;&quot;Make_a_Reservation&quot;&lt;/span&gt; was updated
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;handoff&quot;&gt;Handoff&lt;/h2&gt;

&lt;p&gt;It is possible to set a specifc number of times where Autopilot and the user are not progressing forward and the call should be re-routed to a live person.&lt;/p&gt;

&lt;p&gt;If the call setup should occur on Programmable Voice modify the following code&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;actions&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;say&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Hold on, we are connecting you with an agent&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;handoff&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;channel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;voice&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;uri&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;INSET YOUR TWIML_URL HERE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;method&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;POST&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If the call should route to Twilio Taskrouter modify the following code&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;actions&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;handoff&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;channel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;voice&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;uri&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;taskrouter://WW0123456789abcddef&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If using Flex and the call should route to a Flex queue modify the following code&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;actions&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;handoff&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;channel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;voice&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;uri&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;taskrouter://WW0123456789abcdef0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;wait_url&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://myapp.com/music.php&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;wait_url_method&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;GET&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;action&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://myapp.com/survey.php&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;priority&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;5&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
				&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;timeout&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;200&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
			&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
		&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
	&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Working with Autopilot CLI cranks up the fun to a new level. Enjoy!&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>BASH script to query an area code and find its assigned city and state</title>
   <link href="http://localhost:4000/2018/12/18/npa-lookup/"/>
   <updated>2018-12-18T00:00:00-05:00</updated>
   <id>http://localhost:4000/2018/12/18/npa-lookup</id>
   <content type="html">&lt;p&gt;This is a script I wrote that looks up an area code in the United States or Canada and returns the city and state it is assigned to by the North American &lt;code class=&quot;highlighter-rouge&quot;&gt;NPA-NXX&lt;/code&gt; Wire Center 
&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;I wrote this script after becoming frustrated each time I needed to look up an area code to see what state it belongs to and realizing I’m wasting time searching. I kept telling myself I’ll write a script to do it. Well, I finally got around to it.&lt;/p&gt;

&lt;h2 id=&quot;service-provider-lesson-of-the-day&quot;&gt;Service Provider Lesson of the Day&lt;/h2&gt;

&lt;p&gt;In the United State and Canada the first 3 digits of a 10 digit phone number are referred to as the Number Plan Area or &lt;code class=&quot;highlighter-rouge&quot;&gt;NPA&lt;/code&gt;. That’s what the rest of us call an Area Code. The second set of 3 digits are the Exchange, or Central Switching Office Designation, and referred to as &lt;code class=&quot;highlighter-rouge&quot;&gt;NXX&lt;/code&gt;. The last 4 digits of a phone number are &lt;code class=&quot;highlighter-rouge&quot;&gt;XXXX&lt;/code&gt; and referred to as the &lt;code class=&quot;highlighter-rouge&quot;&gt;SLI&lt;/code&gt; or Subscriber Line Identifier.&lt;/p&gt;

&lt;p&gt;Standard formatting is represented as &lt;code class=&quot;highlighter-rouge&quot;&gt;NPA-NXX-XXXX&lt;/code&gt;. In the number &lt;code class=&quot;highlighter-rouge&quot;&gt;415-523-8886&lt;/code&gt; the NPA is 415 and the NXX is 523. The SLI is 8886.&lt;/p&gt;

&lt;p&gt;Last item to note is the reason for &lt;code class=&quot;highlighter-rouge&quot;&gt;NPA-NXX&lt;/code&gt; is for carriers to know what &lt;code class=&quot;highlighter-rouge&quot;&gt;LATA&lt;/code&gt; (Local Access and Transport Area) the NPA-NXX originates from. In telco terminology this is the &lt;code class=&quot;highlighter-rouge&quot;&gt;rate center&lt;/code&gt; your number belongs to. The LATA is the invisible line that determines when your call is local or long distance. There’s more to it than that, but I’ll save the rest for another day.&lt;/p&gt;

&lt;h2 id=&quot;view-the-completed-script&quot;&gt;View the completed script&lt;/h2&gt;

&lt;p&gt;Below is the shell script &lt;code class=&quot;highlighter-rouge&quot;&gt;npa.sh&lt;/code&gt; in its final form.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#United States and Canada NPA Lookup&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#To run this script execute npa.sh followed by the three digit NPA&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# npa.sh 404&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# NPA 404 =  N Georgia: Atlanta and suburbs &lt;/span&gt;


&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://www.bennetyee.org/ucsd-pages/area.html&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-z&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
	&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Include a three digit NPA: npa.sh XXX&quot;&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;k&quot;&gt;fi

if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt; | wc &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-ne&lt;/span&gt; 4 &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
	&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;NPA must be three digits.&quot;&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;k&quot;&gt;fi

if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-z&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt; | sed &lt;span class=&quot;s1&quot;&gt;'s/[[:digit:]]//g'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
	&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Letters are are not compliant with NPA formatting.&quot;&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;k&quot;&gt;fi

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-dump&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$source&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;name=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; | &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	sed &lt;span class=&quot;s1&quot;&gt;'s/&amp;lt;[^&amp;gt;]*&amp;gt;//g;s/^ //g'&lt;/span&gt; | &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	cut &lt;span class=&quot;nt&quot;&gt;-f2-&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;| cut &lt;span class=&quot;nt&quot;&gt;-f1&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
	
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;NPA &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; =&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$result&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;example&quot;&gt;Example&lt;/h2&gt;

&lt;p&gt;I run the &lt;code class=&quot;highlighter-rouge&quot;&gt;npa.sh&lt;/code&gt; script and want to know what city and state NPA 404 belongs to. I immediately receive a result that says it’s North Georgia and includes Atlanta and the greater surrounding area.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mbp2018&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;npa.sh 404

NPA 404 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  N Georgia: Atlanta and suburbs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;how-the-script-works&quot;&gt;How the Script Works&lt;/h2&gt;

&lt;p&gt;First we assign the variable name &lt;code class=&quot;highlighter-rouge&quot;&gt;source&lt;/code&gt; to the &lt;code class=&quot;highlighter-rouge&quot;&gt;URL&lt;/code&gt; which is the source of our data where we extract the answer for the NPA query.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://www.bennetyee.org/ucsd-pages/area.html&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The next three sections validate proper NPA formatting otherwise the result will fail. The NPA is referenced by the variable &lt;code class=&quot;highlighter-rouge&quot;&gt;$1&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-z&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
	&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Include a three digit NPA: npa.sh XXX&quot;&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;k&quot;&gt;fi

if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt; | wc &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-ne&lt;/span&gt; 4 &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
	&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;NPA must be three digits.&quot;&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;k&quot;&gt;fi

if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-z&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt; | sed &lt;span class=&quot;s1&quot;&gt;'s/[[:digit:]]//g'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
	&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Letters are are not compliant with NPA formatting.&quot;&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The next section is the core of the script. I will break it down into smaller components.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-dump&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$source&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;name=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; | &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	sed &lt;span class=&quot;s1&quot;&gt;'s/&amp;lt;[^&amp;gt;]*&amp;gt;//g;s/^ //g'&lt;/span&gt; | &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	cut &lt;span class=&quot;nt&quot;&gt;-f2-&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;| cut &lt;span class=&quot;nt&quot;&gt;-f1&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A variable &lt;code class=&quot;highlighter-rouge&quot;&gt;result&lt;/code&gt; is assigned to whatever the final output will be from the rest of the script. When returning the answer to the query we simply tell it to &lt;code class=&quot;highlighter-rouge&quot;&gt;echo&lt;/code&gt; the &lt;code class=&quot;highlighter-rouge&quot;&gt;result&lt;/code&gt; back tot he user.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;curl&lt;/code&gt; is a command line utility which supports many protocols including HTTPS to send and receive data. In this case curl is &lt;code class=&quot;highlighter-rouge&quot;&gt;-silently&lt;/code&gt; recevieving a &lt;code class=&quot;highlighter-rouge&quot;&gt;-dump&lt;/code&gt; of information from our &lt;code class=&quot;highlighter-rouge&quot;&gt;$source&lt;/code&gt; variable we identified (https URL).&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-dump&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$source&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Paste the line below in your terminal to see what’s happening in realtime. This will return data in HTML format to your terminal window.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-dump&lt;/span&gt; https://www.bennetyee.org/ucsd-pages/area.html&lt;span class=&quot;s2&quot;&gt;&quot;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Once the source has dumped the data back to us we must &lt;code class=&quot;highlighter-rouge&quot;&gt;grep&lt;/code&gt; (search and match) the NPA we are looking for.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-dump&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$source&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;name=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you run the raw curl script above the results provide NPA data that looks like the following. This is what &lt;code class=&quot;highlighter-rouge&quot;&gt;grep&lt;/code&gt; is looking for.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;404&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;404&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Below is an example of the full section from the source that contains information about NPA 404. It’s more than we need and would not make for usable output on the terminal.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;align=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;404&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;404&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;align=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;GA&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;align=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;-5&lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt; N Georgia: Atlanta and suburbs &lt;span class=&quot;nt&quot;&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#678&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;678&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;, split &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#770&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;770&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sed&lt;/code&gt; is a standard Unix utility which uses regular expressions to manipulate interesting data. In this case remove the unnecessary HTML.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cut&lt;/code&gt; is another standard Unix utility used to extract specific alphanumeric content and write to a file or pipe to another output.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sed &lt;span class=&quot;s1&quot;&gt;'s/&amp;lt;[^&amp;gt;]*&amp;gt;//g;s/^ //g'&lt;/span&gt;
cut &lt;span class=&quot;nt&quot;&gt;-f2-&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;| cut &lt;span class=&quot;nt&quot;&gt;-f1&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Once again everything in the last section shown together as a multi-stage script.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-dump&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$source&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;name=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; | &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	sed &lt;span class=&quot;s1&quot;&gt;'s/&amp;lt;[^&amp;gt;]*&amp;gt;//g;s/^ //g'&lt;/span&gt; | &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
	cut &lt;span class=&quot;nt&quot;&gt;-f2-&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;| cut &lt;span class=&quot;nt&quot;&gt;-f1&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The final line in the script takes the data stored in the &lt;code class=&quot;highlighter-rouge&quot;&gt;result&lt;/code&gt; variable and will &lt;code class=&quot;highlighter-rouge&quot;&gt;echo&lt;/code&gt; the output on the terminal.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;NPA &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; =&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$result&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;executing-npash-from-macos-terminal&quot;&gt;Executing &lt;code class=&quot;highlighter-rouge&quot;&gt;npa.sh&lt;/code&gt; from macOS Terminal&lt;/h2&gt;

&lt;p&gt;I prefer to keep the script in &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/local/bin&lt;/code&gt; for faster execution. Otherwise there’s little to gain over using a web browser and searching online.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mbp2018&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;npa.sh 404

NPA 404 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  N Georgia: Atlanta and suburbs 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Script for macOS that automates desktop screenshots and video capture</title>
   <link href="http://localhost:4000/2018/11/14/macos-screencapture-terminal/"/>
   <updated>2018-11-14T00:00:00-05:00</updated>
   <id>http://localhost:4000/2018/11/14/macos-screencapture-terminal</id>
   <content type="html">&lt;p&gt;Apple includes a command line utility called &lt;code class=&quot;highlighter-rouge&quot;&gt;screencapture&lt;/code&gt; which allows macOS to take any number of screenshots silently in the background, hands-free, while the user is working. 
&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;Keyboard shortcuts such as &lt;code class=&quot;highlighter-rouge&quot;&gt;Command+Shift+4&lt;/code&gt; will save a screencapture to the desktop and save the file as &lt;code class=&quot;highlighter-rouge&quot;&gt;.png&lt;/code&gt;.  Another frequently used shortcut &lt;code class=&quot;highlighter-rouge&quot;&gt;Command+Control+Shift+4&lt;/code&gt; copies the screencapture to the clipboard.&lt;/p&gt;

&lt;p&gt;Beyond keyboard shortcuts there is a Screenshot utility located in &lt;code class=&quot;highlighter-rouge&quot;&gt;Applications &amp;gt; Utilities&lt;/code&gt;. This places a panel at the bottom of the desktop providing more control of individual screencaptures.&lt;/p&gt;

&lt;p&gt;The above methods assume the user doesn’t need their hands at the time of taking the screencapture. It may also feel tedious to manually take screenshots one at a time if needing more then a few. The &lt;code class=&quot;highlighter-rouge&quot;&gt;screenshot&lt;/code&gt; command line utility solves this problem while providing significant flexibility.&lt;/p&gt;

&lt;h3 id=&quot;viewing-screencapture-options&quot;&gt;Viewing &lt;code class=&quot;highlighter-rouge&quot;&gt;screencapture&lt;/code&gt; options&lt;/h3&gt;

&lt;p&gt;Open macOS Terminal and run screencapture from the command line to see the optional arguements.&lt;/p&gt;

&lt;p&gt;A few nice options worth noting are capturing the Touch Bar on a MacBook Pro, passing screencaptures directly to Mail, Preview, Messages, or the Clipboard, capturing desktop video and passing it to Quicktime, and Interactive Mode which allows changing what part of the screen should be captured.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mbp2018:~ mh$ screencapture -h
usage: screencapture [-icMPmwsWxSCUtoa] [files]
	-c         force screen capture to go to the clipboard
	-b         capture Touch Bar - non-interactive modes only
	-C         capture the cursor as well as the screen. only in 
			   non-interactive modes
	-d         display errors to the user graphically
	-i         capture screen interactively, by selection or window
				control key - causes screen shot to go to clipboard
				space key   - toggle between mouse selection and
				              window selection modes
				escape key  - cancels interactive screen shot
	-m         only capture the main monitor, undefined if -i is set
	-D&amp;lt;display&amp;gt; screen capture or record from the display specified.
	 			-D 1 is main display, -D 2 secondary, etc.
	-o         in window capture mode, do not capture the shadow of window
	-p         screen capture will use the default settings for capture. 
			   The files argument will be ignored
	-M         screen capture output will go to a new Mail message
	-P         screen capture output will open in Preview or 
	           QuickTime Player if video
	-I         screen capture output will open in Messages
	-B&amp;lt;bundleid&amp;gt; screen capture output will open in app with bundleid
	-s         only allow mouse selection mode
	-S         in window capture mode, capture the screen not the window
	-J&amp;lt;style&amp;gt;  sets the starting of interfactive capture
				selection       - captures screen in selection mode
				window          - captures screen in window mode
				video           - records screen in selection mode
	-t&amp;lt;format&amp;gt; image format to create, default is png 
			   (other options include pdf, jpg, tiff and other formats)
	-T&amp;lt;seconds&amp;gt; take the picture after a delay of &amp;lt;seconds&amp;gt;, default is 5
	-w         only allow window selection mode
	-W         start interaction in window selection mode
	-x         do not play sounds
	-a         do not include windows attached to selected windows
	-r         do not add dpi meta data to image
	-l&amp;lt;windowid&amp;gt; capture this windowsid
	-R&amp;lt;x,y,w,h&amp;gt; capture screen rect
	-v        capture video recording of the screen
	-V&amp;lt;seconds&amp;gt; limits video capture to specified seconds
	-A&amp;lt;id&amp;gt;    captures audio during a video recording using default input. 
			  Optional specify the id of the audio source
	-k        show clicks in video recording mode
	-U        Show interactive toolbar in interactive mode
	-u        present UI after screencapture is complete. 
	          files passed to command line will be ignored
	files     where to save the screen capture, 1 file per screen
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;building-a-script-to-automatate-repetitive-screencapture-tasks&quot;&gt;Building a script to automatate repetitive screencapture tasks&lt;/h2&gt;

&lt;p&gt;I want to write a script that takes 45 screencaptures of my desktop every 30 seconds and saves them as &lt;code class=&quot;highlighter-rouge&quot;&gt;.jpg&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Open your preferred IDE or use macOS TextEdit. If using TextEdit it is important to save the file in plain text format. Save the file using the &lt;code class=&quot;highlighter-rouge&quot;&gt;.sh&lt;/code&gt; extension rather than &lt;code class=&quot;highlighter-rouge&quot;&gt;.txt&lt;/code&gt; since our goal is writig a &lt;code class=&quot;highlighter-rouge&quot;&gt;bash&lt;/code&gt; script and we will execute from the &lt;code class=&quot;highlighter-rouge&quot;&gt;shell&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# script to run screencapture every one second&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;screenshot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;which screencapture&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -x -m -C&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;freq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;30		&lt;span class=&quot;c&quot;&gt;#take a screenshot every 30 seconds&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;maxshots&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;45	&lt;span class=&quot;c&quot;&gt;#take 45 screenshots then quit&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;while &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;getopts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;af:m&quot;&lt;/span&gt; opt&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do
	case&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$opt&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in
	&lt;/span&gt;f &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;freq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$OPTARG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;		&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
	m &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;maxshots&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$OPTARG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;	&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
	? &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Usage: &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$0&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; [-f frequency] [-m maxcaps]&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&amp;amp;2
		&lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
	&lt;span class=&quot;k&quot;&gt;esac
done

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;counter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1 	&lt;span class=&quot;c&quot;&gt;#set startng number; incrementally append to filename&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$counter&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-lt&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$maxshots&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;$screenshot&lt;/span&gt; screenshot&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;counter&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;.jpg
	&lt;span class=&quot;nv&quot;&gt;counter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$((&lt;/span&gt; counter &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;))&lt;/span&gt; 
	sleep &lt;span class=&quot;nv&quot;&gt;$freq&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;done

&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;how-it-works&quot;&gt;How it Works&lt;/h2&gt;

&lt;p&gt;Before executing and testing the script I would like to explain what is happening. When the script runs it will take a screenshot of the desktop every 30 seconds and quit after 45 screenshots. This is set by the value &lt;code class=&quot;highlighter-rouge&quot;&gt;freq=30&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;maxshots=45&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;making-screencapsh-executable&quot;&gt;Making &lt;code class=&quot;highlighter-rouge&quot;&gt;screencap.sh&lt;/code&gt; executable&lt;/h2&gt;

&lt;p&gt;In order to run the shell script we must change its permission so it is excutable.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mbp2017:~ mh&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;
/Users/mh/Desktop

mbp2017:~ mh&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls &lt;/span&gt;screen&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
screencap.sh

mbp2017:~ mh&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;chmod +x screencap.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Execute the file. It will run silently in the background.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mbp2017:~ mh&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./screencap.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Once the script has finished there will be 45 &lt;code class=&quot;highlighter-rouge&quot;&gt;.jpg&lt;/code&gt; files in the folder where the script was run.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mbp2017:~ mh$ ls

screenshot1.jpg
screenshot2.jpg
screenshot3.jpg
screenshot4.jpg
screenshot5.jpg
screenshot6.jpg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;overide-the-settings-in-the-script&quot;&gt;Overide the settings in the script&lt;/h2&gt;

&lt;p&gt;View the script and notice &lt;code class=&quot;highlighter-rouge&quot;&gt;f&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;m&lt;/code&gt; allow for optional arguements using &lt;code class=&quot;highlighter-rouge&quot;&gt;$OPTARG&lt;/code&gt;. Whatever arguements are passed from the command line they will override the pre-configured settings.&lt;/p&gt;

&lt;p&gt;This will change the frequency from 30 seconds to 8 seconds. Everything else remains at their default settings referenced in the script.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mbp2017:~ mh&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./screencap.sh &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; 8
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Building on top of this script with additional default parameters and command line arguements makes the &lt;code class=&quot;highlighter-rouge&quot;&gt;screencapture&lt;/code&gt; utility convenient and powerful.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Using a Cisco router as a TFTP server</title>
   <link href="http://localhost:4000/2018/04/19/cisco-ios-tftp-server/"/>
   <updated>2018-04-19T00:00:00-04:00</updated>
   <id>http://localhost:4000/2018/04/19/cisco-ios-tftp-server</id>
   <content type="html">&lt;p&gt;The ability to use a router as a &lt;code class=&quot;highlighter-rouge&quot;&gt;TFTP&lt;/code&gt; server can be very useful. Whether hosting router images, ringtones, or other bulk files, it’s less time consuming than configuring a server for the same purpose.
&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;The first thing I’ll mention is TFTP is not a secure protocol. There is no encryption within the TFTP protocol itself. Do not transmit sensitive data over TFTP, ever.&lt;/p&gt;

&lt;p&gt;Using the &lt;code class=&quot;highlighter-rouge&quot;&gt;tftp-server&lt;/code&gt; command and specifying the file in flash to share makes the file accessible to any inbound TFTP requests for the file name.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;router# config t
router(config)# tftp-server flash:c7200-adventerprisek9-mz.152.bin
router(config)# end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If I want to restrict TFTP access so only device on a specific network can access the image I can create and &lt;code class=&quot;highlighter-rouge&quot;&gt;access list&lt;/code&gt; and reference it in the tftp-server configuration.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;router# config t
router(config)# no tftp-server flash:c7200-adventerprisek9-mz.152.bin
router(config)# access-list 40 permit 172.16.32.0 0.0.0.255
router(config)# access-lkst 40 deny any
router(config)# tftp-server flash:c7200-adventerprisek9-mz.152.bin 40
router(config)# end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;By creating access-list &lt;code class=&quot;highlighter-rouge&quot;&gt;40&lt;/code&gt; I have defined what IP network is permitted access to the image and what should be denied. I then applied the access list number &lt;code class=&quot;highlighter-rouge&quot;&gt;40&lt;/code&gt; at the end of the &lt;code class=&quot;highlighter-rouge&quot;&gt;tftp-server&lt;/code&gt; statement which enforces the new &lt;code class=&quot;highlighter-rouge&quot;&gt;ACL&lt;/code&gt; rules.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Acme Packet SBC “fraud-protection” ACLI Command Configuration</title>
   <link href="http://localhost:4000/2017/06/14/apkt-fraud/"/>
   <updated>2017-06-14T00:00:00-04:00</updated>
   <id>http://localhost:4000/2017/06/14/apkt-fraud</id>
   <content type="html">&lt;p&gt;Acme Packet EcZ-730m1 software introduces the ACLI command &lt;code class=&quot;highlighter-rouge&quot;&gt;fraud-protection&lt;/code&gt;&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;This allows the SBC to store multiple black lists, white lists, SIP redirect lists, and &lt;code class=&quot;highlighter-rouge&quot;&gt;rate limit&lt;/code&gt; entries for fraud prevention and call control. Multiple lists may exist where entries are stored in separate XML files.&lt;/p&gt;

&lt;p&gt;Lists (XML files) may be initially created through &lt;code class=&quot;highlighter-rouge&quot;&gt;ACLI&lt;/code&gt; or web interface. If the preference is to manage lists manually then once a list is created it will need to be downloaded and the &lt;code class=&quot;highlighter-rouge&quot;&gt;XML&lt;/code&gt; file(s) edited with a text editor, similar to managing Local Route Tables (LRT). Otherwise, all entries may be added, modified, or deleted using the web interface.&lt;/p&gt;

&lt;p&gt;Below is an example of the GUI configuration elements for managing fraud-protection.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-fraud01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-fraud02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-fraud03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Below is an example of creating a new fraud-protection &lt;code class=&quot;highlighter-rouge&quot;&gt;XML&lt;/code&gt; file in the ACLI called &lt;code class=&quot;highlighter-rouge&quot;&gt;fraudProtect.xml&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
sbc# config t
sbc(configuration)# system
sbc(system)# fraud-protection
sbc(fraud-protection)# select
sbc(fraud-protection)# show
fraud-protection
    mode                            local
    file-name                       fraudProtect.xml
    options
    allow-remote-call-terminate     disabled

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In the example below, the &lt;code class=&quot;highlighter-rouge&quot;&gt;Whitelist&lt;/code&gt; section permits all calls based on the &lt;code class=&quot;highlighter-rouge&quot;&gt;From header&lt;/code&gt; matching acmepacket.com through the realm called &lt;code class=&quot;highlighter-rouge&quot;&gt;peer&lt;/code&gt;. Calls based on the &lt;code class=&quot;highlighter-rouge&quot;&gt;To header&lt;/code&gt; to a specific UK phone number on any realm is represented by a wildcard &lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;Blacklist&lt;/code&gt; section rejects calls based on a variety of criteria. Note that even though calls are blocked to &lt;code class=&quot;highlighter-rouge&quot;&gt;+44&lt;/code&gt; based on the To header, calls to &lt;code class=&quot;highlighter-rouge&quot;&gt;+441189240000&lt;/code&gt; are permitted since this is a more specific match in the Whitelist.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&amp;lt;?xml version='1.0' standalone='yes'?&amp;gt;
&amp;lt;oracleSbcFraudProtectionApi version=&quot;1.0&quot;&amp;gt;
    &amp;lt;call-whitelist&amp;gt;
        &amp;lt;userEntry&amp;gt;
            &amp;lt;from-hostname&amp;gt;acmepacket.com&amp;lt;/from-hostname&amp;gt;
            &amp;lt;realm&amp;gt;peer&amp;lt;/realm&amp;gt;
        &amp;lt;/userEntry&amp;gt;
        &amp;lt;userEntry&amp;gt;
            &amp;lt;to-hostname&amp;gt;+441189240000&amp;lt;/to-hostname&amp;gt;
            &amp;lt;realm&amp;gt;*&amp;lt;/realm&amp;gt;
        &amp;lt;/userEntry&amp;gt;
    &amp;lt;/call-whitelist&amp;gt;
    &amp;lt;call-blacklist&amp;gt;
        &amp;lt;userEntry&amp;gt;
            &amp;lt;from-hostname&amp;gt;robodialer.com&amp;lt;/from-hostname&amp;gt;
            &amp;lt;realm&amp;gt;peer&amp;lt;/realm&amp;gt;
        &amp;lt;/userEntry&amp;gt;
        &amp;lt;userEntry&amp;gt;
            &amp;lt;from-hostname&amp;gt;208.57.21.10&amp;lt;/from-hostname&amp;gt;
            &amp;lt;realm&amp;gt;peer&amp;lt;/realm&amp;gt;
        &amp;lt;/userEntry&amp;gt;
        &amp;lt;userEntry&amp;gt;
            &amp;lt;from-hostname&amp;gt;+14045551000&amp;lt;/from-hostname&amp;gt;
            &amp;lt;realm&amp;gt;peer&amp;lt;/realm&amp;gt;
        &amp;lt;/userEntry&amp;gt;
        &amp;lt;userEntry&amp;gt;
            &amp;lt;from-hostname&amp;gt;+44&amp;lt;/from-hostname&amp;gt;
            &amp;lt;realm&amp;gt;*&amp;lt;/realm&amp;gt;
        &amp;lt;/userEntry&amp;gt;
    &amp;lt;/call-blacklist&amp;gt;
    &amp;lt;call-redirect&amp;gt;
    &amp;lt;/call-redirect&amp;gt;
    &amp;lt;call-rate-limit&amp;gt;
    &amp;lt;/call-rate-limit&amp;gt;
&amp;lt;/oracleSbcFraudProtectionApi&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The command &lt;code class=&quot;highlighter-rouge&quot;&gt;show fraud-protection all&lt;/code&gt; will show  fraud definitions and if any matches exist.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
sbc# show fraud-protection all

List Type   To/From     Match Value     Ingress Realm   No. of Hits
                                                        Recent  Total
.....................................................................
Blacklist   From        robodialer.com  level3          3       7
Blacklist   From        208.57.21.10    gx              10      23
Blacklist   From        +14045551000    orange          1       3
Blacklist   From        +44             bt              0       0
Whitelist   From        acmepacket.com  att             32      128
Whitelist   From        +441189240000   bt              5       7

             Total hits: 168
          Total entries: 6
Total displayed entries: 6
              File name: fraudProtect.xml

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The command &lt;code class=&quot;highlighter-rouge&quot;&gt;show fraud-protection stats&lt;/code&gt; show a summary version of matches.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
Fraud Protection Engine State   ---- Lifetime ----
                                 Recent   Total   
Blacklisted Calls                     14       33
Whitelisted Calls                     37      135
Ratelimited Calls                      0        0
Redirected Calls                       0        0
Blacklist Rejected Calls               0        0
Ratelimit Rejected Calls               0        0

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</content>
 </entry>
 
 <entry>
   <title>QoS Media Policy on the Acme Packet SBC</title>
   <link href="http://localhost:4000/2017/03/10/apkt-tos-bit-qos/"/>
   <updated>2017-03-10T00:00:00-05:00</updated>
   <id>http://localhost:4000/2017/03/10/apkt-tos-bit-qos</id>
   <content type="html">&lt;p&gt;When configuring &lt;code class=&quot;highlighter-rouge&quot;&gt;QoS&lt;/code&gt; for SIP and RTP on an Acme Packet SBC it is critical to set &lt;code class=&quot;highlighter-rouge&quot;&gt;ToS HEX&lt;/code&gt; to correct alues. This is accomplished through a Media Policy.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;The first step is to create a Media Policy as shown.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
sd4500-02# config t
sd4500-02(configure)# media-manager
sd4500-02(media-manager)# media-policy
sd4500-02(media-policy)# name QoS-Audio

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The signaling &lt;code class=&quot;highlighter-rouge&quot;&gt;media-type&lt;/code&gt; should be set to &lt;code class=&quot;highlighter-rouge&quot;&gt;message&lt;/code&gt; and the proper &lt;code class=&quot;highlighter-rouge&quot;&gt;tos-value&lt;/code&gt; is &lt;code class=&quot;highlighter-rouge&quot;&gt;0×60&lt;/code&gt; (CoS 3, DSCP 24). For RTP the media-type value should be set to &lt;code class=&quot;highlighter-rouge&quot;&gt;audio&lt;/code&gt; and the proper tos-value for RTP traffic is &lt;code class=&quot;highlighter-rouge&quot;&gt;0xb8&lt;/code&gt; (Cos 5, DSCP 46).&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
media-policy
    name                QoS-Audio
    tos-settings        
        media-type          audio
        media-sub-type      
        tos-value           0xb8
        media-attributes
    tos-settings
        media-type          message
        media-sub-type      sip
        tos-value           0x60
        media-attributes

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Setting these values in the &lt;code class=&quot;highlighter-rouge&quot;&gt;Media Policy&lt;/code&gt; does not invoke QoS. This is simply a set of instructions of what should be applied to signaling and RTP packets but we need to tell the SBC where to apply it.  This is done on a &lt;code class=&quot;highlighter-rouge&quot;&gt;realm&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
realm-config
    identifier          Access
    description         Public Facing-Untrusted
    addr-prefix         208.57.21.0/24
    network-interface   m00:226
...
    dns-realm           
    media-policy        QoS-Audio
    media-sec-policy

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With the&lt;code class=&quot;highlighter-rouge&quot;&gt; media policy&lt;/code&gt; assigned to the &lt;code class=&quot;highlighter-rouge&quot;&gt;realm&lt;/code&gt; this answers the question of where to apply QoS so the policy is &lt;code class=&quot;highlighter-rouge&quot;&gt;enforced&lt;/code&gt;. Any traffic which passes through this realm will be marked, or re-marked, with the appropriate QoS values.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Acme Packet SBC and Configuring “Comfort Noise Generation”</title>
   <link href="http://localhost:4000/2016/06/11/apkt-comfort-noise/"/>
   <updated>2016-06-11T00:00:00-04:00</updated>
   <id>http://localhost:4000/2016/06/11/apkt-comfort-noise</id>
   <content type="html">&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Comfort Noise&lt;/code&gt; (RFC 3389) is the sound played in an RTP stream to prevent a user form hearing total silence on the connection.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Not all telephony systems have the ability to play music while a party is on hold. Without Comfort Noise (CN) the party on hold may think the connection dropped unless there is an indicator letting know the call has not been dropped..&lt;/p&gt;

&lt;p&gt;Starting with &lt;code class=&quot;highlighter-rouge&quot;&gt;ECZ-7.4.0&lt;/code&gt; the Acme Packet SBC has the ability to &lt;code class=&quot;highlighter-rouge&quot;&gt;inject&lt;/code&gt; Comfort Noise into an RTP stream by analyzing the SDP Offer and SDP Answer from both SIP endpoints. &lt;code class=&quot;highlighter-rouge&quot;&gt;CN interworking&lt;/code&gt; is triggered on a per realm basis.&lt;/p&gt;

&lt;p&gt;In the example below the &lt;code class=&quot;highlighter-rouge&quot;&gt;calling party&lt;/code&gt; (Skype for Business) SDP Offer contains CN and is traversing a realm called &lt;code class=&quot;highlighter-rouge&quot;&gt;core&lt;/code&gt; which has &lt;code class=&quot;highlighter-rouge&quot;&gt;CN&lt;/code&gt; interworking &lt;code class=&quot;highlighter-rouge&quot;&gt;enabled&lt;/code&gt;. The SBC forwards SDP to the &lt;code class=&quot;highlighter-rouge&quot;&gt;called party&lt;/code&gt;. If the called party SDP Answer contains CN the SBC does not do anything because both endpoints support Comfort Noise. If CN is &lt;code class=&quot;highlighter-rouge&quot;&gt;not present&lt;/code&gt; in the PSTN’s SDP Answer the SBC &lt;code class=&quot;highlighter-rouge&quot;&gt;adds CN&lt;/code&gt; to the egress SDP Answer (towards Skype for Business) and will take responsibility for injecting CN into the RTP stream.&lt;/p&gt;

&lt;p&gt;Example SBC configuration:&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
sbc# config t
sbc(configure)# media-manager
sbc(media-manager)# realm-config
sbc(realm-config)# spl-option +comfort-noise-generate
sbc(realm-config)# done

media-manager
    realm-config
        identifier          core
        addr-prefix         10.24.124.0/24
        network-interface   s1p0
        mm-in-realm         enabled
        spl-options         comfort-noise-generate

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>How to use “Conditional Logging” on the Acme Packet SBC</title>
   <link href="http://localhost:4000/2015/03/12/apkt-logging/"/>
   <updated>2015-03-12T00:00:00-04:00</updated>
   <id>http://localhost:4000/2015/03/12/apkt-logging</id>
   <content type="html">&lt;p&gt;With the relase of Acme Packet OS 7.x one of the most useful new features is &lt;code class=&quot;highlighter-rouge&quot;&gt;Advanced Logging&lt;/code&gt;.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;This is similar to &lt;code class=&quot;highlighter-rouge&quot;&gt;debug output&lt;/code&gt; in a log file without having to enable full debug, which can drain CPU on just about any system. By setting a &lt;code class=&quot;highlighter-rouge&quot;&gt;condition&lt;/code&gt; (or set of conditions) the SBC will capture the interesting traffic to a log file.&lt;/p&gt;

&lt;p&gt;The Advanced Logging feature was created using Session Plugin Language (SPL). For those not familiar with SPL it is a &lt;code class=&quot;highlighter-rouge&quot;&gt;LUA&lt;/code&gt; based scripting language for the SBC. SPL provides an easy way to expand the SBC’s capabilities.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-logging01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;By adding the additional line below only calls &lt;code class=&quot;highlighter-rouge&quot;&gt;from 4045551212&lt;/code&gt; that route &lt;code class=&quot;highlighter-rouge&quot;&gt;to 7815551212&lt;/code&gt; will be logged.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-logging02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;When finished it is recommended to &lt;code class=&quot;highlighter-rouge&quot;&gt;disable&lt;/code&gt; advanced-logging using &lt;code class=&quot;highlighter-rouge&quot;&gt;spl stop sip advanced-logging&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;It is possible to create different Advanced Logging profiles so they may be easily reused at another time without manually entering complex strings each time logging is enabled.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-logging03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The following are the advanced-logging options which may be set.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-logging04.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Active Directory based SIP Routing on the Acme Packet SBC</title>
   <link href="http://localhost:4000/2015/01/27/acme-packet-active-directory/"/>
   <updated>2015-01-27T00:00:00-05:00</updated>
   <id>http://localhost:4000/2015/01/27/acme-packet-active-directory</id>
   <content type="html">&lt;p&gt;Many Enterprises have migrated to &lt;code class=&quot;highlighter-rouge&quot;&gt;SIP Trunking&lt;/code&gt; for PSTN access. For an Enterprise with a single IP PBX platform and an SBC on the edge, call routing from the PSTN to the internal network is typically very straight forward because all DID’s point to one IP platform.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Example of a common &lt;code class=&quot;highlighter-rouge&quot;&gt;SIP Trunk&lt;/code&gt; model&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-ad01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;When another SIP communication platform is introduced into the Enterprise topology it raises the question of what IP platform is considered the call routing decision maker for calls coming from the PSTN SIP Trunk.&lt;/p&gt;

&lt;p&gt;This is an example of a less-than-desirable implementation.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-ad02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Usually one of these is the common way an Enterprise integrates their IP PBX with another IP platform (such as Lync):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;All calls go to the IP PBX and then &lt;code class=&quot;highlighter-rouge&quot;&gt;fork&lt;/code&gt; to Lync&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;All calls go to Lync and use Lync’s &lt;code class=&quot;highlighter-rouge&quot;&gt;Simultaneous Ring&lt;/code&gt; feature to ring the IP PBX&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SBC &lt;code class=&quot;highlighter-rouge&quot;&gt;forks&lt;/code&gt; the SIP Invite to the IP PBX and Lync simultaneously&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Although many IP PBX’s deployed with Lync use one of the above methods, there is a much better way for this integration to occur.&lt;/p&gt;

&lt;p&gt;The Acme Packet SBC supports &lt;code class=&quot;highlighter-rouge&quot;&gt;Active Directory&lt;/code&gt; integration for call routing decisions. The beauty of this is in most organizations Active Directory is already used to store various phone numbers for users within the Enterprise.&lt;/p&gt;

&lt;p&gt;When the &lt;code class=&quot;highlighter-rouge&quot;&gt;local-policy&lt;/code&gt; is configured to support Active Directory (LDAP) and a SIP Invite is received from the PSTN, the SBC will query Active Directory to see if the phone number is assigned to a user.  If it is, the SBC will see if it’s part of the Active Directory field attribute &lt;code class=&quot;highlighter-rouge&quot;&gt;telephoneNumber&lt;/code&gt; for a desk phone, or &lt;code class=&quot;highlighter-rouge&quot;&gt;msRTCSIP&lt;/code&gt; for a Lync phone number. Other attributes are supported and are explained further in this discussion.&lt;/p&gt;

&lt;p&gt;This is an example of an Active Directory query from the SBC to determine if the call should be sent to CUCM or Lync.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-ad03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In a similar regard to the above diagram, if the dialed digits are the Lync phone number and the Active Directory query shows the dialed digits belong to the msRTCSIP attribute, the Acme Packet SBC knows the &lt;code class=&quot;highlighter-rouge&quot;&gt;next hop&lt;/code&gt; should be the realm and session agent for Lync.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-ad04.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is where the power of Active Directory integration in the SBC becomes very interesting..&lt;/p&gt;

&lt;p&gt;The Acme Packet SBC’s &lt;code class=&quot;highlighter-rouge&quot;&gt;local-policy&lt;/code&gt; may be configured in such a way that if the dialed digits +1-404-555-1000 match telephoneNumber in Active Directory, but msRTCSIP is also populated with a separate Lync phone number (in this case +1-404-555-9595) the SBC’s local-policy preference will route the call to Lync instead of the IP PBX. If msRTCSIP is not populated, the call will simply route the to the IP PBX. This is a very flexible way of handling call routing. What this comes down to in this particular case is an environment where some users are exclusively on CUCM and others are CUCM and Lync, but the Enterprise may want Lync users to always receive calls on Lync first regardless of the dialed digits coming from the PSTN.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-ad05.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now for even more flexibility..&lt;/p&gt;

&lt;p&gt;The Acme Packet SBC may also be configured in such a way that it recognizes both &lt;code class=&quot;highlighter-rouge&quot;&gt;telephoneNumber&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;msRTCSIP&lt;/code&gt; being populated, each with their own phone numbers, but if the SIP Invite to the first platform experiences a SIP Invite timeout or failure, a SIP Invite may be sent to the &lt;code class=&quot;highlighter-rouge&quot;&gt;next destination&lt;/code&gt;. You are not limited to just two destinations.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-ad06.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Finally, having calls &lt;code class=&quot;highlighter-rouge&quot;&gt;reroute&lt;/code&gt; to the &lt;code class=&quot;highlighter-rouge&quot;&gt;PSTN&lt;/code&gt; during an internal network outage is also possible by using the Active Directory attribute field &lt;code class=&quot;highlighter-rouge&quot;&gt;mobile&lt;/code&gt;. If this field is populated and the SBC’s local-policy is setup to recognize the digits in the mobile field, calls that fail to setup internally (in this case, to Lync and the IP PBX) may route back out the PSTN SIP Trunk to the user’s mobile phone.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-ad07.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Configuration examples:&lt;/p&gt;

&lt;p&gt;The two critical configuration elements to examine for Active Directory integration are &lt;code class=&quot;highlighter-rouge&quot;&gt;local-policy&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;ldap-config&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;First we will look at local-policy. This is very straight forward as the only difference when using Active Directory integration is the next-hop policy-attribute will reference ldap.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-adconf01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The next configuration element to talk about is &lt;code class=&quot;highlighter-rouge&quot;&gt;ldap-config&lt;/code&gt;. This is where you define the Active Directory criteria and how call routing should be handled. You may have have more than one ldap-config on the SBC.&lt;/p&gt;

&lt;p&gt;The example below is similar to our simple SIP Trunk diagram at the start of this blog post. There is a single IP PBX platform on the internal network. However, the mobile field in Active Directory is also populated with digits. The way this local-policy is configured, if a SIP Invite timeout occurs to CUCM, the &lt;code class=&quot;highlighter-rouge&quot;&gt;policy&lt;/code&gt; will &lt;code class=&quot;highlighter-rouge&quot;&gt;reroute&lt;/code&gt; the failed call back out the SIP Trunk to the Active Directory user’s mobile number.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-adconf02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In this next example the local-policy uses the &lt;code class=&quot;highlighter-rouge&quot;&gt;attribute order&lt;/code&gt;. This means if the dialed digits match an IP PBX phone number (telephoneNumber) but the user also has a Lync phone number populated in Active Directory under msRTCSIP, send the SIP Invite to Lync.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-adconf03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As you can see from the above example one of the most useful elements in the ldap-cfg-attributes is the use of regular expressions for phone number formatting.&lt;/p&gt;

&lt;p&gt;Other cool features in 6.4f1:&lt;/p&gt;

&lt;p&gt;Support for &lt;code class=&quot;highlighter-rouge&quot;&gt;RFC 6341&lt;/code&gt; (SIP-based Media Recording – aka SIPREC) on the Linux version of the Acme Packet SBC.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-ad08.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Acme Packet SBC and Configuring “Selective” Early Media Suppression</title>
   <link href="http://localhost:4000/2014/12/30/acme-packet-early-media/"/>
   <updated>2014-12-30T00:00:00-05:00</updated>
   <id>http://localhost:4000/2014/12/30/acme-packet-early-media</id>
   <content type="html">&lt;p&gt;The Acme Packet SBC includes support for &lt;code class=&quot;highlighter-rouge&quot;&gt;Early Media Suppression&lt;/code&gt;. This allows you to decide what &lt;code class=&quot;highlighter-rouge&quot;&gt;Realms&lt;/code&gt; can and cannot support Early Media and in what direction Early Media is allowed.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Taking it one step further, the Acme Packet SBC also supports &lt;code class=&quot;highlighter-rouge&quot;&gt;Selective&lt;/code&gt; Early Media Suppression. This means that even if a realm is configured to receive Early Media for all calls, the SBC can still be configured to deny Early Media from certain realms (even if those realms can send early media to other destinations) through the use of Realm Groups.&lt;/p&gt;

&lt;p&gt;Early Media is defined by an endpoint sending &lt;code class=&quot;highlighter-rouge&quot;&gt;RTP/RTCP&lt;/code&gt; packets &lt;code class=&quot;highlighter-rouge&quot;&gt;before&lt;/code&gt; a &lt;code class=&quot;highlighter-rouge&quot;&gt;SIP session&lt;/code&gt; is established by a &lt;code class=&quot;highlighter-rouge&quot;&gt;200 OK&lt;/code&gt;. Otherwise, the expected behavior is media does not begin flowing between endpoints until 200 OK is received. Instances where early media may occur is when a user calls the PSTN and an announcement is immediately played or a custom ringtone (ie. music) is heard when calling a mobile phone.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-early-media01.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There may be a variety of reasons why one does not want to &lt;code class=&quot;highlighter-rouge&quot;&gt;allow Early Media&lt;/code&gt; under specific conditions. For example (real world) a Service Provider supporting Hosted IP PBX subscribers and SIP Trunking customers sends PSTN traffic from their network to multiple PSTN Media Gateways. One gateway supports outbound Local and Domestic Long Distance calls and the other media gateway supports outbound International calls. The Service Provider doesn’t want to allow Early Media from the International gateway to flow inbound to their Hosted IP PBX customer base, but they will allow Early Media to flow from the International media gateway to their SIP Trunking customer base. The Local and Domestic Long Distance media gateway is allowed to send Early Media to either customer base.&lt;/p&gt;

&lt;p&gt;First, it’s important to cover the basics of implementing Early Media Suppression. This may be configured within a Realm or a &lt;code class=&quot;highlighter-rouge&quot;&gt;Session Agent&lt;/code&gt; using the &lt;code class=&quot;highlighter-rouge&quot;&gt;early-media-allow&lt;/code&gt; parameter. When a call egresses the SBC to a specific realm, the matching realm’s early-media-allow setting will be applied to either allow-all, block-all, or block one-way early media until a 200 OK is received. Media must be anchored to the SBC in order for Early Media settings to have any effect. In this example, calls are originated from the Access (Hosted IP PBX) realm to the PSTN (Access realm’s next-hop is the Core realm).&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
APKT-6300(realm-config)# show

realm-config
    identifier                  Core
    description                 PSTN Media Gateway
    addr-prefix                 0.0.0.0
    network-interface           s0p0:0
    mm-in-realm                 enabled
...
    symetric-latching           disabled
    early-media-allow           none

APKT-6300(realm-config)# early-media-allow ?

&amp;lt;enumeration&amp;gt; how to handle early media
    &amp;lt;none, reverse, both&amp;gt;
    none: no early media allowed
    reverse: allow early media in the direction of calling endpoint
    both: allow early media in both directions

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This example has &lt;code class=&quot;highlighter-rouge&quot;&gt;early-media-allow&lt;/code&gt; set to &lt;code class=&quot;highlighter-rouge&quot;&gt;none&lt;/code&gt; in the realm configuration. Early Media is not allowed in either direction. Therefore, if an Access subscriber calls the PSTN, no Early Media is permitted back to the Access realm, and vice-versa.&lt;/p&gt;

&lt;p&gt;~&lt;a href=&quot;/blog/assets/apkt/apkt-early-media02.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This example has &lt;code class=&quot;highlighter-rouge&quot;&gt;early-media-allow&lt;/code&gt; set to &lt;code class=&quot;highlighter-rouge&quot;&gt;reverse&lt;/code&gt; which in this case allows a Hosted IP PBX subscriber to place a call to BroadWorks or the PSTN and hear early media. However, the subscribers are not permitted to send Early Media in the other direction since early-media-allow is set to reverse and not both.&lt;/p&gt;

&lt;p&gt;~&lt;a href=&quot;/blog/assets/apkt/apkt-early-media03.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So far we have statically defined to always always allow &lt;code class=&quot;highlighter-rouge&quot;&gt;Early Media&lt;/code&gt; from one direction. Now for a scenario that is a little more tricky. Lets say calls originating from the Access realm which route to the ITSP-1 realm/media gateway &lt;code class=&quot;highlighter-rouge&quot;&gt;are not allowed&lt;/code&gt; to hear Early Media. However, calls originating from the Access realm which route to the ITSP-2 realm/media gateway &lt;code class=&quot;highlighter-rouge&quot;&gt;are allowed&lt;/code&gt; to hear Early Media. However, ITSP-1 is allowed to send Early Media to other realms (ie. Acces-2, Acces-3, etc.). Only the “Access” realm cannot receive Early Media from ITSP-1.&lt;/p&gt;

&lt;p&gt;The trick in this topology is all media gateways are allowed to send Early Media to any realm, and Access is allowed to receive Early Media from any realm. We want to &lt;code class=&quot;highlighter-rouge&quot;&gt;selectively suppress&lt;/code&gt; only when the Early Media RTP traverses specifically from ITSP-1 to Access.&lt;/p&gt;

&lt;p&gt;By using &lt;code class=&quot;highlighter-rouge&quot;&gt;Realm Groups&lt;/code&gt;, we can essentially build a logical binding of source and destination realms together and customize Early Media settings just for calls flowing across those two realms.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
APKT-6300# config t
APKT-6300(configure)# media-manager
APKT-6300(media-manager)# realm-group
APKT-6300(realm-group)# source-realm &quot;Access, ITSP-1&quot;
APKT-6300(realm-group)# destination-realm &quot;Access&quot;
APKT-6300(realm-group)# early-media-allow-direction none

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now only calls that are originated from the &lt;code class=&quot;highlighter-rouge&quot;&gt;Access&lt;/code&gt; realm to &lt;code class=&quot;highlighter-rouge&quot;&gt;ITSP-1&lt;/code&gt; realm will be prohibited from receiving early media from the ITSP-1 Media Gateway. If the same call routes to &lt;code class=&quot;highlighter-rouge&quot;&gt;ITSP-2&lt;/code&gt;, Early Media is allowed.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/blog/assets/apkt/apkt-early-media04.png&quot;&gt;&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Acme Packet SBC and DNS-SRV Load Balancing “ping-all-addresses”</title>
   <link href="http://localhost:4000/2014/07/29/apkt-dns-srv/"/>
   <updated>2014-07-29T00:00:00-04:00</updated>
   <id>http://localhost:4000/2014/07/29/apkt-dns-srv</id>
   <content type="html">&lt;p&gt;The Acme Packet SBC supports the ability to &lt;code class=&quot;highlighter-rouge&quot;&gt;load balance SIP traffic&lt;/code&gt; several difference ways. Simply stated, a SIP invite will ingress to the SBC. The SBC will lookup the destination and if it results in a Session Agent Group or &lt;code class=&quot;highlighter-rouge&quot;&gt;SAG&lt;/code&gt; configuration with two or more &lt;code class=&quot;highlighter-rouge&quot;&gt;Session Agents&lt;/code&gt;, the SBC will egress the SIP invite using one of the selected load balancing algorithms such as Least Busy.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;The SBC also supports &lt;code class=&quot;highlighter-rouge&quot;&gt;DNS SRV&lt;/code&gt; service records for load balancing. For those not familiar with DNS SRV, it’s a form of DNS that allows a single domain name (associated with a service and protocol) to resolve to many possible destinations. The destinations may be &lt;code class=&quot;highlighter-rouge&quot;&gt;equal&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;weighted differently&lt;/code&gt;. The following is an example of a DNS SRV record for SIP over UDP looks like. In this case all records have an equal weight of 10.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-dns-srv01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The domain name &lt;code class=&quot;highlighter-rouge&quot;&gt;sip.apkt.com&lt;/code&gt; will resolve to five different A records. The lookup must be a DNS SRV lookup for this to resolve correctly. In this case we are using &lt;code class=&quot;highlighter-rouge&quot;&gt;SIP over UDP&lt;/code&gt; as the service which has been defined in Bind.&lt;/p&gt;

&lt;p&gt;Here is how to &lt;code class=&quot;highlighter-rouge&quot;&gt;enable&lt;/code&gt; DNS SRV load balancing on the SBC. Note this complies with RFC 3263 “Locating SIP Servers”. Once the config has been saved and actives the SBC will &lt;code class=&quot;highlighter-rouge&quot;&gt;ping&lt;/code&gt; the address resolved by sip.apkt.com to see which IP’s are in service.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-dns-srv02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now when a SIP Invite &lt;code class=&quot;highlighter-rouge&quot;&gt;ingresses&lt;/code&gt; the SBC and matches a &lt;code class=&quot;highlighter-rouge&quot;&gt;local-policy&lt;/code&gt; where the destination next-hop utilizes DNS SRV load balancing the traffic will be balanced across &lt;code class=&quot;highlighter-rouge&quot;&gt;all nodes&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-dns-srv03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>How to “grep” the Acme Packet SBC Configuration (ACLI)</title>
   <link href="http://localhost:4000/2014/04/20/acme-packet-grep/"/>
   <updated>2014-04-20T00:00:00-04:00</updated>
   <id>http://localhost:4000/2014/04/20/acme-packet-grep</id>
   <content type="html">&lt;p&gt;The grep tool is a very popular Unix command line utility used to match a regular expression. Although &lt;code class=&quot;highlighter-rouge&quot;&gt;grep&lt;/code&gt; doesn’t specifically exist on the Acme Packet SBC the &lt;code class=&quot;highlighter-rouge&quot;&gt;find&lt;/code&gt; command serves a similar purpose.  This feature was introduced in ACLI release 6.4.&lt;/p&gt;

&lt;!--more--&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;NNOS-SD# find [configuration | running-config | command]  [attribute]

NNOS-SD# find ?

&amp;lt;string&amp;gt;                find the specified string
command                 find command within menus
configuration           find in editing configuration
running-config          find in running configuration

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;My SBC has a &lt;code class=&quot;highlighter-rouge&quot;&gt;realm&lt;/code&gt; called &lt;code class=&quot;highlighter-rouge&quot;&gt;Access&lt;/code&gt; and I want to know where Access resides in the configuration&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
NNOS-SD# find running-config Access

session-router -&amp;gt; local-policy [Access; *; *]
source-realm Access
description Access to Core

system -&amp;gt; network-interface [s0p0:0]
description Access

media-manager -&amp;gt; realm-config [Access]
identifier Access

session-router -&amp;gt; sip-interface [Access]
realm-id Access

media-manager -&amp;gt; steering-pool [72.12.135.250=16384+Access]
realm-id Access

Found 6 instances

NNOS-SD# find running-config Core

session-router -&amp;gt; local-policy [Access; *; *]
description Access to Core

session-router -&amp;gt; local-policy [Access; *; *] -&amp;gt; local-policy-attribute [Core; SAG:BW-APP-SERVERS]
realm Core
realm Core

system -&amp;gt; network-interface [s1p0:0]
description Core

media-manager -&amp;gt; realm-config [Core]
identifier Core

session-router -&amp;gt; session-agent [as1]
realm-id Core

session-router -&amp;gt; sip-config
home-realm-id Core

session-router -&amp;gt; sip-interface [Core]
realm-id Core

media-manager -&amp;gt; steering-pool [10.12.135.250=16384+Core]
realm-id Core

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I want to know what configuration elements support &lt;code class=&quot;highlighter-rouge&quot;&gt;local-policy&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
NNOS-SD# find local-policy
Command menu
(root) show configuration local-policy
(root) show running-config local-policy
(configure) session-router local-policy

Running configuration

Found 3 instances
NNOS-SD#

NNOS-SD# find force
Command menu
(root) halt force
(root) reboot force
(root) reboot fast force
(root) show configuration enforcement-profile
(root) show running-config enforcement-profile
(configure) media-manager realm-config enforcement-profile
(configure) session-router enforcement-profile
(configure) session-router session-agent enforcement-profile
(configure) session-router session-router force-report-trunk-info
(configure) session-router sip-config enforcement-profile
(configure) session-router sip-interface enforcement-profile

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Acme Packet SBC Remote SIP Survivability</title>
   <link href="http://localhost:4000/2014/03/30/acme-packet-sbc-remote-survivability/"/>
   <updated>2014-03-30T00:00:00-04:00</updated>
   <id>http://localhost:4000/2014/03/30/acme-packet-sbc-remote-survivability</id>
   <content type="html">&lt;p&gt;With the release of Acme Packet 6.4m2 software the SBC now supports &lt;code class=&quot;highlighter-rouge&quot;&gt;SIP Remote Survivability&lt;/code&gt;. This is applicable for a Service Provider offering &lt;code class=&quot;highlighter-rouge&quot;&gt;Hosted IP PBX&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;UCaaS&lt;/code&gt; using SIP phones which register to a centralized Data Center or Cloud model.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;In this example I will focus primarily on the Service Provider model, although it’s just as relevant to the Enterprise model mentioned above since we are talking about remote phones registering over the WAN to a &lt;code class=&quot;highlighter-rouge&quot;&gt;Softswitch&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;IP PBX&lt;/code&gt;. In the diagram below the SIP phones register from the Enterprise site over the Internet or &lt;code class=&quot;highlighter-rouge&quot;&gt;MPLS&lt;/code&gt; network to the Service Provider core where a Broadsoft &lt;code class=&quot;highlighter-rouge&quot;&gt;BroadWorks&lt;/code&gt; Softswitch resides. For those note familiar with BroadWorks, think of it as a very large software platform that has the ability to virtualize what looks like many IP PBX’s, each for dedicated customers. Most notably in large deployments it is common to see some sort of SIP enabled Firewall, ALG, or SBC (preferred) on the Enterprise premise. All SIP communication, including SIP registration and originated SIP calls, will egress the Enterprise phones through the SBC up into the Service Provider’s SBC and to BroadWorks. Even if calls are destined for another phone extension in the same Enterprise premise the call must go through the carrier core where CDR’s will be generated and any other Class 5 features may be provided for the call hair pinning back into the Enterprise to a different extension.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-remote-survivability01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;One of the biggest challenges is what happens if the SP core is unreachable. All registrations and call processing will fail, even for calls destined to another phone extension in the same Enterprise, since the &lt;code class=&quot;highlighter-rouge&quot;&gt;SIP Invite&lt;/code&gt; must be able to reach the BroadWorks Softswitch or IP PBX to ring another extension in the same location.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-remote-survivability01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If the Enterprise is using an Acme Packet SBC on premise the &lt;code class=&quot;highlighter-rouge&quot;&gt;Survivability Mode&lt;/code&gt; will use either the &lt;code class=&quot;highlighter-rouge&quot;&gt;P-Asserted Identity&lt;/code&gt; from the SIP endpoint or optionally the BroadWorks Survivability method using XML. When the SP Core or Enterprise data center becomes unreachable the Survivability Health Score degrades and the SBC knows to process registration and call traffic locally without sending the traffic to the SP Core.&lt;/p&gt;

&lt;p&gt;In Survivability Mode phone A has the ability to call phone C even when the SP Core is unreachable. If the Enterprise normally uses abbreviated dialing such as 4-digit extensions, this will still continue to work, as well as dialing the full phone number.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-remote-survivability03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Some Enterprises may want to have a local &lt;code class=&quot;highlighter-rouge&quot;&gt;SIP Gateway&lt;/code&gt; (such as a Cisco ISR or Adtran Total Access IAD) on premise and utilize one or more PRI’s connected for PSTN access when the SP Core is unreachable. Depending on the Service Provider, the same SP used for SIP Services may also route to the PRI for overflow/outage scenarios so the Enterprise has both inbound and outbound redundancy on premise. The call originated from the SIP network the PSTN where there is no matching Address of Record for SIP phones, the SBC will route the calls to the SIP-PSTN Gateway.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-remote-survivability04.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Below is a basic Remote Survivability configuration.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
NNOS-SD# config t
NNOS-SD(configure)# session-router
NNOS-SD(session-router)# sip-interface
NNOS-SD(sip-interface)# service-tag SipTrunk1 &amp;lt;- Your SIP Interface
NNOS-SD(sip-interface)# done
NNOS-SD(sip-interface)# exit
NNOS-SD(session-router)# survivbility
NNOS-SD(survivability)# enabled
NNOS-SD(survivability)# done
NNOS-SD(survivability)# exit
NNOS-SD(sip-interface)# service-health
NNOS-SD(service-health)# service-tag-list
NNOS-SD(serviceTag)# service-tag-string SipTrunk1
NNOS-SD(serviceTag)# sa-health-profile
NNOS-SD(sa-health-profile)# session-agent-hostname VzB-Trunk01 &amp;lt;- Session Agent to Monitor
NNOS-SD(sa-health-profile)# session-agent-health 100 &amp;lt;- Engage Survivability when below 100

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Best-practice is to enable &lt;code class=&quot;highlighter-rouge&quot;&gt;SIP Options&lt;/code&gt; ping for each &lt;code class=&quot;highlighter-rouge&quot;&gt;Session Agent&lt;/code&gt;. This way the SBC will pro-actively know when a Session Agent is in-service or out of service and degrade the health score appropriately.&lt;/p&gt;

&lt;p&gt;The following has been a basic introduction to the Acme Packet Remote Survivability feature. There is more functionality and detail that may be applied and is well documented in the E-CX Maintenance Guide. Although a subset of this functionality has existed on other SIP ALG platforms in the past, Acme Packet has introduced many great new features relevant for Remote Survivability that do not exist elsewhere. All the resiliency and High-Availability that is inherent to the Acme Packet platform remains intact even when Remote Survivability is engaged.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How to “tail” sipmsg.log on the Acme Packet SBC command line (ACLI)</title>
   <link href="http://localhost:4000/2014/03/19/acme-packet-tail-sipmsglog/"/>
   <updated>2014-03-19T00:00:00-04:00</updated>
   <id>http://localhost:4000/2014/03/19/acme-packet-tail-sipmsglog</id>
   <content type="html">&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;tail&lt;/code&gt; program is available on Unix operating systems and is used to view the tail end of a text file or piped data.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Once tail is running for a particular log file, and as the log file get populated with new data, the newly populated content is displayed on the screen real-time. This saves a step from having to use more or cat after the fact where a user would have to scroll all the way through the log file to the end in order to view the newly added data (and more data may continuously be added making it even more inconvenient).&lt;/p&gt;

&lt;p&gt;In the case of the Acme Packet SBC, retrieving log files for viewing typically requires downloading them via FTP/SFTP. The Acme Packet SBC now supports &lt;code class=&quot;highlighter-rouge&quot;&gt;tail from ACLI&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In the following example I want to see what dialog is happening when trying to register a SIP phone through the SBC.  It is possible to tail different log files.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;NNOS-VM# notify sipd siplog

NNOS-VM# tail-logfile-open sipd sipmsg.log

waiting 1200 for response to request
completed

14:44.154 On [0:0]72.12.135.250:5060 received from 72.12.135.2:56883
REGISTER sip:acmepacket.local SIP/2.0
Via: SIP/2.0/UDP 172.20.10.4:56883;rport;branch=z9hG4bKPjjWHgcYsrr-T9bPbaZ1-hzFTE-U70g.F2
Route: &amp;lt;sip:acmepacket.local;lr&amp;gt;
Max-Forwards: 70
From: “Mark Holloway-8001″ &amp;lt;sip:7818018001@acmepacket.local&amp;gt;;tag=q.wbz5RZXd30uc7RwV2IP4GmSCGKDTwl
To: “Mark Holloway-8001″ &amp;lt;sip:7818018001@acmepacket.local&amp;gt;
Call-ID: VV5Yro3MQmi7fXX1CDeDax79zDnR.5jN
CSeq: 55540 REGISTER
User-Agent: Telephone 1.1.4
Contact: “Mark Holloway-8001″ &amp;lt;sip:7818018001@172.20.10.4:56883;ob&amp;gt;
Expires: 300
Allow: PRACK, INVITE, ACK, BYE, CANCEL, UPDATE, INFO, SUBSCRIBE, NOTIFY, REFER, MESSAGE, OPTIONS
Content-Length: 0

—————————————-

14:44.158 On [0:0]72.12.135.250:5060 sent to 72.12.135.2:56883
SIP/2.0 404 Not Found
Via: SIP/2.0/UDP 172.20.10.4:56883;received=72.12.135.2;branch=z9hG4bKPjjWHgcYsrr-T9bPbaZ1-hzFTE-U70g.F2;rport=56883
From: “Mark Holloway-8001″ &amp;lt;sip:7818018001@acmepacket.local&amp;gt;;tag=q.wbz5RZXd30uc7RwV2IP4GmSCGKDTwl
To: “Mark Holloway-8001″ &amp;lt;sip:7818018001@acmepacket.local&amp;gt;;tag=aprqngfrt-ejkv9p0000m9f
Call-ID: VV5Yro3MQmi7fXX1CDeDax79zDnR.5jN
CSeq: 55540 REGISTER

—————————————-

NNOS-VM# notify sipd nosiplog

NNOS-VM# tail-logfile-close sipd sipmsg.log

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Configure 802.3ad Link Aggregation for Broadsoft</title>
   <link href="http://localhost:4000/2014/02/18/broadsoft-link-aggregation/"/>
   <updated>2014-02-18T00:00:00-05:00</updated>
   <id>http://localhost:4000/2014/02/18/broadsoft-link-aggregation</id>
   <content type="html">&lt;p&gt;The BroadWorks Software Management Guide provides an example for configuring active/standby Ethernet interfaces (called mode 1) when configuring &lt;code class=&quot;highlighter-rouge&quot;&gt;bonded&lt;/code&gt; Ethernet transmission on a single Red Hat Enterprise server.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Unfortunately with &lt;code class=&quot;highlighter-rouge&quot;&gt;mode 1&lt;/code&gt; only one Ethernet interface is transmitting and receiving traffic at a time while the other interface is in standby mode.  My preferred approach is &lt;code class=&quot;highlighter-rouge&quot;&gt;802.3ad&lt;/code&gt; Link Aggregation Control Protocol (LACP). &lt;code class=&quot;highlighter-rouge&quot;&gt;LACP&lt;/code&gt; creates aggregation groups that share the same speed and duplex settings across Ethernet interfaces on a server. It utilizes all slaves in the active aggregate according to the 802.3ad specification.  802.3ad requires an Ethernet switch that is capable of supporting LACP.&lt;/p&gt;

&lt;h2 id=&quot;red-hat-enterprise-linux&quot;&gt;Red Hat Enterprise Linux&lt;/h2&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
#vi /etc/modprobe.conf
alias eth0
alias eth1
alias bond0 bonding
options bonding miimon=50 mode=4   (note: miimon = frequency in milliseconds to monitor interfaces)

==AS1==
#vi /etc/sysconfig/network
NETWORKING=yes
NETWORKING_IPV6=no
HOSTNAME=as1
NETWORKDELAY=25

#cd /etc/sysconfig/network-scripts
#vi ifcfg-bond0
DEVICE=bond0
BOOTPROTO=static
ONBOOT=yes
USERCTL=no
BROADCAST=192.168.126.255
IPADDR=192.168.126.145
NETMASK=255.255.255.0
NETWORK=192.168.126.0
GATEWAY=192.168.126.1

#vi ifcfg-eth0
# Broadcom Corporation NetXtreme II BCM5708 Gigabit Ethernet
DEVICE=eth0
BOOTPROTO=none
ONBOOT=yes
MASTER=bond0
SLAVE=yes

#vi ifcfg-eth1
# Broadcom Corporation NetXtreme II BCM5708 Gigabit Ethernet
DEVICE=eth1
BOOTPROTO=none
ONBOOT=yes
MASTER=bond0
SLAVE=yes

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;cisco-switch&quot;&gt;Cisco Switch&lt;/h2&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
interface Port-channel30
description Port-Channel to as1
switchport
switchport access vlan 12
switchport mode access
spanning-tree portfast

interface GigabitEthernet3/24
description [as1] IBM x3650 m2 – eth0
switchport access vlan 12
switchport mode access
spanning-tree portfast
channel-group 130 mode active

interface GigabitEthernet6/24
description [as1] IBM x3650 m2 – eth1
switchport access vlan 12
switchport mode access
spanning-tree portfast
channel-group 130 mode active

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Using active/standby &lt;code class=&quot;highlighter-rouge&quot;&gt;mode 1&lt;/code&gt; does not require any additional configuration beyond RHEL, so while it is more convenient and simplistic, this configuration does not fully maximize the capability of the servers.  This can be especially useful for the Media Servers, Conference Servers, or the Application Servers where Broadworks log files or Radius CDR’s are being offloaded to a separate server.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Acme Packet SBC Command Line “more” Option for “show running-config”</title>
   <link href="http://localhost:4000/2013/10/13/acme-packet-more-acli-command/"/>
   <updated>2013-10-13T00:00:00-04:00</updated>
   <id>http://localhost:4000/2013/10/13/acme-packet-more-acli-command</id>
   <content type="html">&lt;p&gt;This short tip helps if you prefer not to have your SBC output display all at once simply enable the &lt;code class=&quot;highlighter-rouge&quot;&gt;more&lt;/code&gt; ACLI element.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-acme-sbc-more01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Also, you can display just the specific show run element you are looking for. The example below will show whatever &lt;code class=&quot;highlighter-rouge&quot;&gt;local-policy&lt;/code&gt; elements are configured on the system.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-acme-sbc-more02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There is the ability to filter output based on specific criteria. Options will vary depending on which &lt;code class=&quot;highlighter-rouge&quot;&gt;running-config&lt;/code&gt; element entered.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-acme-sbc-more03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Either the entire output of the &lt;code class=&quot;highlighter-rouge&quot;&gt;running-config&lt;/code&gt; or the sub-elements may be output to a file and retrieved through FTP via the management interface.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-acme-sbc-more04.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Acme Packet SBC “SIP Monitoring and Trace” Configuration</title>
   <link href="http://localhost:4000/2013/07/21/apkt-smt/"/>
   <updated>2013-07-21T00:00:00-04:00</updated>
   <id>http://localhost:4000/2013/07/21/apkt-smt</id>
   <content type="html">&lt;p&gt;Diagnosing a troubled &lt;code class=&quot;highlighter-rouge&quot;&gt;SIP&lt;/code&gt; call has a tendency to be a real pain. Whether it’s running &lt;code class=&quot;highlighter-rouge&quot;&gt;wireshark&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;tcpdump&lt;/code&gt;, or collecting &lt;code class=&quot;highlighter-rouge&quot;&gt;debugs&lt;/code&gt;, having to sort through duplicate packets and attempting to merge different pcap files together does not provide a simple way to troubleshoot a single call while looking at both sides of the call in a single ladder diagram.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Fortunately the Acme Packet SBC now includes a free tool embedded in the code that once enabled, allows it turns the SBC into a &lt;code class=&quot;highlighter-rouge&quot;&gt;SIP capture device&lt;/code&gt;. The distinct advantage here is seeing &lt;code class=&quot;highlighter-rouge&quot;&gt;both sides of a call&lt;/code&gt; in a &lt;code class=&quot;highlighter-rouge&quot;&gt;single ladder diagram&lt;/code&gt;. Even better, extra (and very useful) information is included in between each step of the ladder diagram referencing internal “logic decisions” as they occur as traffic passes through the SBC.  Finding a particular capture is easy using &lt;code class=&quot;highlighter-rouge&quot;&gt;Search Filters&lt;/code&gt; which allow you to specify just about any criteria.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-smt01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Pop-up context&lt;/code&gt; provides tool tips and additional information about a call depending on what area you are hovering over. It is also possible to export a capture locally so it may be emailed and viewed by others  rather than having a variety of users logging into the SBC’s web interface. Alternatively, &lt;code class=&quot;highlighter-rouge&quot;&gt;captures may be exported&lt;/code&gt; as ASCII text files with proper and readable formatting of the call information.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
---Session Summary---
Startup Time: 2012-04-26 08:40:44.624
State: TERMINATED-200
Duration: 9
From URI: sipp &amp;amp;lt:sip:sipp@172.16.34.10:5060&amp;amp;gt;;tag=25
To URI: sut &amp;amp;lt;sip:service@172.16.34.226:5060&amp;amp;gt;;tag=3453
Ingress Src Address: 172.16.34.10
Ingress Src Port: 5060
Ingress Dest Address: 172.16.34.226
Ingress Dest Port: 5060
Egress Source Address: 192.168.34.226
Egress Source Port: 5060
Egress Destination Address: 192.168.34.17
Egress Destination Port: 5060
Ingress Realm: Access
Egress Realm: Core
Ingress NetworkIf: s0p0
Egress NetworkIf: s1p0

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;There are three main parts to viewing a captured call. The first is the &lt;code class=&quot;highlighter-rouge&quot;&gt;Session Summary&lt;/code&gt; view which contains information such as source and destination IP addresses, URI’s, Realms, etc..&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-smt02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The second viewing pane is &lt;code class=&quot;highlighter-rouge&quot;&gt;SIP Message Details&lt;/code&gt;. This is the actual &lt;code class=&quot;highlighter-rouge&quot;&gt;ladder diagram&lt;/code&gt; and SBC events.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-smt03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The third pane is for viewing &lt;code class=&quot;highlighter-rouge&quot;&gt;QoS&lt;/code&gt; statistics such as jitter, packet loss, delay, and MOS scores for the specified call.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-smt04.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In order to enable web browser viewing of SIP Monitoring and Trace the web server must be set to the &lt;code class=&quot;highlighter-rouge&quot;&gt;enabled&lt;/code&gt; state.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
web-server-config
    state               enabled
    inactivity-timeout  5
    http-state          enabled
    http-port           80
    https-state         enabled
    https-port          443
    tls-profile     

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The next step is to create one or more &lt;code class=&quot;highlighter-rouge&quot;&gt;filters&lt;/code&gt;. In the following example there is a filter called hostedIpPbx and in the user portion of the filter any SIP messages containing the phone number digits 781801 will be captured.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
sbc# config t
sbc(configure)# session-router
sbc(session-router)# filter-config
sbc(filter-config)# select
name:
1. Broadsoft
2. Cisco
3. Genesys

selection: 1
sbc#(filter-config)# show
    name            Broadsoft
    address         0.0.0.0
    user            781801 &amp;lt;- Phone prefix NPA-NXX to capture

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The next step is to enable sip-monitoring and identify which &lt;code class=&quot;highlighter-rouge&quot;&gt;monitoring filter&lt;/code&gt; should be used. Applying the filter here enabled the filter globally on the system. Usually filters are best applied to specific realms or session agents (under monitoring-filters) to capture only interesting traffic.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
sbc(sip-minitoring)# show
sip-monitoring
    state               enabled
    monitoring-filters  Broadsoft
    trigger-window      0

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In this particular network there are IP phones behind a Cisco ASA firewall which NAT to the public internet and need to register to a BroadWorks SIP softswitch which is being “hidden” behind the SBC.&lt;/p&gt;

&lt;p&gt;Below is the capture based on the filter above. Note the phone number starts with &lt;code class=&quot;highlighter-rouge&quot;&gt;781801xxxx&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-smt05.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Acme Packet SBC SIP Overload Protection</title>
   <link href="http://localhost:4000/2012/12/21/acme-packet-sip-overload/"/>
   <updated>2012-12-21T00:00:00-05:00</updated>
   <id>http://localhost:4000/2012/12/21/acme-packet-sip-overload</id>
   <content type="html">&lt;p&gt;BGP Route flaps, accidental fiber cuts, equipment failure, these are all things that trigger &lt;code class=&quot;highlighter-rouge&quot;&gt;outages&lt;/code&gt; and cause traffic to behave erratically and unpredictably.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;In the moment of crisis, a five minute voice outage feels like an eternity. What many people do not realize is, just when the network begins to &lt;code class=&quot;highlighter-rouge&quot;&gt;normalize&lt;/code&gt; itself, this will cause a massive SIP registration flood pouring into the network as potentially hundreds of thousands of endpoints (or more) will send their SIP registrations which would typically severely spike CPU on the Softswitch infrastructure, thus causing a second outage for the VoIP network.&lt;/p&gt;

&lt;p&gt;There are ways to protect the core network with the Acme Packet SBC. The Acme Packet &lt;code class=&quot;highlighter-rouge&quot;&gt;Net-SAFE&lt;/code&gt; architecture definitely warrants its own deep dive discussion and is the official word on SBC security. It’s not my intention to try and cover it here. However, having worked with similar topologies and dealing with short, bursty outages where endpoints disappear for anywhere from 3 to 15 minutes then come back in massive waves, there are a couple of simple steps one can take to keep the network healthy and avoid a second outage due to a SIP Registration Overload condition occurring after the network layer has resolved itself..&lt;/p&gt;

&lt;p&gt;The following is a simple example of a Hosted IP PBX topology where &lt;code class=&quot;highlighter-rouge&quot;&gt;SIP endpoint registration&lt;/code&gt; is targeted to an Acme Packet Session Load Balancer &lt;code class=&quot;highlighter-rouge&quot;&gt;(SLB)&lt;/code&gt; which distributes the registrations to multiple SBC cluster members. Typically the cluster members are geographically located in different cities, states, or countries, supporting millions of subscribers (this scenario only shows three cluster members, but more are supported by the SLB).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-slb01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now lets say that all of a sudden the Internet experiences a &lt;code class=&quot;highlighter-rouge&quot;&gt;BGP route flap&lt;/code&gt;. That’s at least 3 minutes of downtime while the routers converge. The SIP phones will lose the ability to communicate with the SBC and the cached SIP Registrations in the SBC will expire and be flushed out. In Hosted NAT Traversal environments it is common for the SIP registration &lt;code class=&quot;highlighter-rouge&quot;&gt;expires timer&lt;/code&gt; in the &lt;code class=&quot;highlighter-rouge&quot;&gt;Contact header&lt;/code&gt; to be set anywhere from 60 – 180 seconds by the SBC.  The reason for the low number is the SBC wants the Firewall to keep the UDP ports open. Firewalls tend to close them quick and since the SBC detects that the phone is behind NAT, it forces the registration to occur more frequently. Otherwise, if the Firewall close the UDP ports, the phone will not be able to receive calls.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-slb02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Without utilizing any additional &lt;code class=&quot;highlighter-rouge&quot;&gt;sip-config&lt;/code&gt; options in the SBC configuration, the SBC will forward all the registrations it receives from the SIP Endpoint to the core Softswitch when network service is back up and running. Note that if recommended DDoS security settings are in place (ie. Net-SAFE) the SBC will gracefully throttle the traffic entering the core so the Softswitch infrastructure does not get overwhelmed. The important things to note here is if a SIP registration cache entry expires, the SBC will forward the “new” registration to the core Softswitch once the network has normalized (as shown below). This could easily result in a flood of registrations happening all at once and put the Softswitch at risk.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-slb03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;By utilizing the &lt;code class=&quot;highlighter-rouge&quot;&gt;register-grace-timer&lt;/code&gt; option under sip-config, the Acme Packet SBC will extend the life of the cached registration entries. Typical settings are between 600 and 900 seconds. The result is that when there is a network outage and SIP endpoints lose their connectivity to the SBC, the SBC will keep the binding of the endpoint in its cache. When the network is restored and all the SIP endpoints are able to communicate successfully with the SBC again (within the register-grace-timer period) there is no need for the SBC to forward all these registrations to the core Softswitch again. The Softswitch has no knowledge that an outage on the Public network occurred since the SBC is doing all the topology hiding and registration management that interfaces to the core.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-slb04.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Adding the following will enable the &lt;code class=&quot;highlighter-rouge&quot;&gt;register-grace-timer&lt;/code&gt; value for &lt;code class=&quot;highlighter-rouge&quot;&gt;900 seconds&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;–pic&lt;/p&gt;

&lt;p&gt;So far the solution outlined above work great when SIP endpoints have a single ingress point into the network (Session Load Balancer) and the SBC cluster members are geographically dispersed in different cities, states, or countries.&lt;/p&gt;

&lt;p&gt;The next example shows a topology where the Service Provider may have two different SBC pairs in two different geographic locations. In this case SIP Endpoints rely on &lt;code class=&quot;highlighter-rouge&quot;&gt;DNS SRV records&lt;/code&gt; (or multiple static IP entries in the phone configuration files) to reach these SBC’s. The condition to consider here is intermittent network behavior. The network isn’t necessarily down hard where all endpoints would simply fail over to the second site. Instead, the primary site is flapping up and down, so phones are intermittently flapping their SIP registration between the primary and secondary sites.&lt;/p&gt;

&lt;p&gt;The following is an example of a deployment where each site has its own independent High Availability pair of Acme Packet SBC’s. SIP Endpoints rely on DNS SRV records to support registration failover between Site 1 and Site 2.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-slb05.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The unfortunate and somewhat dysfunctional behavior in this topology is some SIP endpoints do not honor the &lt;code class=&quot;highlighter-rouge&quot;&gt;expires= timer&lt;/code&gt; value sent by the SBC in a &lt;code class=&quot;highlighter-rouge&quot;&gt;200 OK&lt;/code&gt; response to their SIP registration. For example, if the SBC sends expires=180 seconds for the registration refresh, some endpoints reduce the value by as much as 50% and  send their registration at 90 seconds instead of 180 seconds. The law of SIP (RFC 3261) states that a SIP Endpoint should attempt the primary IP each time it tries to register. During an intermittent outage what will happen is the SIP endpoint is already registered with a cached entry at the primary site, then 90 seconds later fails to the secondary site, then 90 seconds later may fail back to the primary site again, then perhaps a fourth time to the secondary site again. Of course this leads to issues if the register-grace-timer is set since the registrations are cached and as a result will not be forwarded to the Softswitch again.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-slb06.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If the &lt;code class=&quot;highlighter-rouge&quot;&gt;register-grace-timer&lt;/code&gt; is set to a value higher than 0 like the previous example where we used a value of 900, the SBC maintains the registration cache entry even though it has expired. For this particular topology, the register-grace-timer should be set to 0. This is critical when the SIP Endpoint flaps back and forth between the two sites, the registration will now be seen as a “new” entry anytime the SIP Endpoint is moving between sites. It’s not the ideal behavior we would like to see, but at minimum the SIP Endpoint is able to support Inbound and Outbound calls without completely failing.&lt;/p&gt;

&lt;p&gt;Depending on which Softswitch vendor you are using, it may also be useful to add the &lt;code class=&quot;highlighter-rouge&quot;&gt;force-unregistration&lt;/code&gt; option in sip-config. This way when the registration cache entry expires in the SBC, the SBC will also notify the Softswitch of the expired entry so it is removed and no SIP Invites are forked to both SBC’s when the subscriber receives a call.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
sip-config
    state                   enabled
    operation-mode          dialog
    dialog-transparency     disabled
    home-realm-id           Core
    egress-realm-id         
...
    options

PHOENIX(sip-config)# options load-limit=&amp;lt;cpu-percentage&amp;gt;
PHOENIX(sip-config)# done

sip-config
    state                   enabled
    operation-mode          dialog
    dialog-transparency     disabled
    home-realm-id           Core
    egress-realm-id
...
    options                 load-limit=90

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</content>
 </entry>
 
 <entry>
   <title>Acme Packet SBC “load-limit” Command Option</title>
   <link href="http://localhost:4000/2012/11/19/acme-packet-load-limit/"/>
   <updated>2012-11-19T00:00:00-05:00</updated>
   <id>http://localhost:4000/2012/11/19/acme-packet-load-limit</id>
   <content type="html">&lt;p&gt;The Acme Packet SBC has an optional parameter that may be added under &lt;code class=&quot;highlighter-rouge&quot;&gt;sip-config&lt;/code&gt; that allows the SBC to gracefully handle traffic in the event the SBC’s main processor reaches a certain threshold.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;There are several reasons as to why this may occur, but at the most basic level it’s a good idea to draw a line in the sand and define at what point to you want to start gracefully &lt;code class=&quot;highlighter-rouge&quot;&gt;rejecting calls&lt;/code&gt; if the CPU reaches a certain threshold. Every SIP appliance should have this option but unfortunately most do not.&lt;/p&gt;

&lt;p&gt;What separates the Acme Packet SBC from others is that when this threshold is reached the SBC will reply with a &lt;code class=&quot;highlighter-rouge&quot;&gt;SIP 503 Service Unavailable&lt;/code&gt; message which tells the originator to try an alternate destination.  In most other SIP appliances once the CPU threshold reaches a certain point the traffic is disrupted by means of calls dropping, loss of RTP (if media is flowing through), or registrations becoming corrupted.&lt;/p&gt;

&lt;p&gt;It is worth mentioning that the purpose of setting the load-limit is to avoid an unforeseen event that would cause any network device to experience excessive utilization and effect production traffic.  This is not a replacement for proper &lt;code class=&quot;highlighter-rouge&quot;&gt;SROP&lt;/code&gt; (SIP Registration Overload Protection) and DDoS (Distributed Denial of Service) configuration on the SBC.  With the proper SROP and DDoS settings you are ensuring the Acme Packet SBC is running optimally and protecting your network while gracefully shedding unwanted or dangerous traffic.&lt;/p&gt;

&lt;p&gt;The following is a shortened output of my sip-config with no options applied.  Adding the load-limit option is a matter of entering the following command.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
sip-config
    state                   enabled
    operation-mode          dialog
    dialog-transparency     disabled
    home-realm-id           Core
    egress-realm-id         
...
    options

PHOENIX(sip-config)# options load-limit=&amp;lt;cpu-percentage&amp;gt;
PHOENIX(sip-config)# done

sip-config
    state                   enabled
    operation-mode          dialog
    dialog-transparency     disabled
    home-realm-id           Core
    egress-realm-id
...
    options                 load-limit=90

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;At this point the Acme Packet SBC will gracefully reject incoming calls if the CPU reaches or &lt;code class=&quot;highlighter-rouge&quot;&gt;exceeds 90%&lt;/code&gt;. Of course this value may be set higher or lower.  More than likely more options will be applied in your &lt;code class=&quot;highlighter-rouge&quot;&gt;sip-config&lt;/code&gt;. If you follow the same process to add another option it will overwrite the option that already exists.  Prepending the &lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt; symbol in front of the option will add it in addition to any existing options.&lt;/p&gt;

&lt;p&gt;In this example the &lt;code class=&quot;highlighter-rouge&quot;&gt;load-limit&lt;/code&gt; is the first configured option. In addition, the &lt;code class=&quot;highlighter-rouge&quot;&gt;max-udp-length&lt;/code&gt; is going to be set to 0 which allows the SBC to fragment UDP packets. Otherwise the maximum size a UDP packet may be is 1500 bytes before having to use SIP TCP.  Setting this in &lt;code class=&quot;highlighter-rouge&quot;&gt;sip-config&lt;/code&gt; applies globally on the SBC but it is possible to configure this on a per sip-interface basis if desired.  The last option is reg-cache-mode=none which tells the SBC to retain the userinfo (post NAT) in the Contact. In most environments (such as Broadsoft BroadWorks) none is the value to use. This is also required when configuring SIP Registration Overload Protection (this will be a separate blog post in the near future.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
PHOENIX(sip-config)# options +reg-cache-mode=none
PHOENIX(sip-config)# options +max-udp-length=0
PHOENIX(sip-config)# done

sip-config
    state                   enabled
    operation-mode          dialog
    dialog-transparency     disabled
    home-realm-id           Core
    egress-realm-id
...
    options                 load-limit=90 reg-cache-mode=none
                            max-udp-length=0

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Based on applying the load-limit to the sip-config this provides one additional line of defense that safeguards your platform from suffering a total outage. There have been many occasions noted in the past where other platforms do not employee this method and the end result is a complete and total network outage.  Once the outage starts it becomes very difficult to recover because endpoints will begin retransmitting. Using this feature in combination with alarm-thresholds plus the appropriate SROP and DDoS settings, there is always awareness of what’s occurring on the network while at the same time gracefully handling any overflow.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Broadsoft Trunk Group Identity Configuration</title>
   <link href="http://localhost:4000/2012/07/10/broadsoft-tg-identity/"/>
   <updated>2012-07-10T00:00:00-04:00</updated>
   <id>http://localhost:4000/2012/07/10/broadsoft-tg-identity</id>
   <content type="html">&lt;p&gt;Broadworks Trunk Group Identity (TGI) is an option in the Trunk Group Profile that allows a unique identity to be provisioned and allow &lt;code class=&quot;highlighter-rouge&quot;&gt;Unscreened Calls&lt;/code&gt; from the customer premise.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Unscreened Calls is common with &lt;code class=&quot;highlighter-rouge&quot;&gt;TDM&lt;/code&gt; (PRI) customers who want to send a &lt;code class=&quot;highlighter-rouge&quot;&gt;From&lt;/code&gt; phone number that does not reside in their Trunk Group. With SIP trunks delivering PRI at the customer premise, this type of call will fail unless the PBX sends an &lt;code class=&quot;highlighter-rouge&quot;&gt;ISDN Redirect&lt;/code&gt; on the PRI connected to the Gateway which generates &lt;code class=&quot;highlighter-rouge&quot;&gt;SIP Diversion&lt;/code&gt; to BroadWorks. Otherwise Broadworks sees a To and From that are both PSTN numbers and &lt;code class=&quot;highlighter-rouge&quot;&gt;rejects&lt;/code&gt; the call.&lt;/p&gt;

&lt;p&gt;A common scenario where this instance occurs is a &lt;code class=&quot;highlighter-rouge&quot;&gt;PSTN&lt;/code&gt; caller calling a &lt;code class=&quot;highlighter-rouge&quot;&gt;SIP&lt;/code&gt; subscriber and the call is forwarded to another PSTN number. The person receiving the forwarded call on the PSTN wants to see the caller ID of the original calling party not the SIP subscriber number. With Unscreened Calls enabled and Trunk Group Identity provisioned in the TG Profile the calls will be permitted even without SIP Diversion. This also requires an identical &lt;code class=&quot;highlighter-rouge&quot;&gt;TGI&lt;/code&gt; to be configured on a SIP endpoint such as a Cisco ISR or IAD.  When the SIP endpoint sends a SIP invite it will include the provisioned TGI in the &lt;code class=&quot;highlighter-rouge&quot;&gt;Contact&lt;/code&gt; header.  As of August 14, 2009, Adtran TA900’s do not support TGI. A feature request has been submitted to Adtran.
`
Trunk Group Identity in Broadworks complies with &lt;code class=&quot;highlighter-rouge&quot;&gt;RFC 4904&lt;/code&gt;. Using &lt;code class=&quot;highlighter-rouge&quot;&gt;trgp&lt;/code&gt; and trunk-context is a requirement to be compliant with the RFC.&lt;/p&gt;

&lt;p&gt;If you are using an &lt;code class=&quot;highlighter-rouge&quot;&gt;Acme Packet SB&lt;/code&gt;C you must configure the global &lt;code class=&quot;highlighter-rouge&quot;&gt;SIP option&lt;/code&gt; to pass the Contact through to Broadworks. Otherwise the SBC will rewrite the Contact header and TGI will not pass.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
acme# config t
acme(config)# session-router
acme(session-router)# sip-config
acme(session-router)# select
acme(sip-config)# options +reg-cache-mode=none

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;All SIP Contact header information from the endpoint is now retained. It is important to note that using + means this option will be added to the SD sip-config and your other options will be retained as well. If you issue the show command you will see an example of this.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
acme(sip-config)# show

options
forward-reg-callid-change
max-udp-length=0
set-inv-exp-at-100-resp
reg-cache-mode=none

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you do not prepend &lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt; in front the option you are adding, the SD will remove the old options and only apply the option you are currently adding.&lt;/p&gt;

&lt;p&gt;The last item to configure is the SIP endpoint. In this case it is a Cisco ISR or IAD. There is no &lt;code class=&quot;highlighter-rouge&quot;&gt;TGI feature&lt;/code&gt; in IOS but IOS does offer the ability to modify SIP headers through the use of &lt;code class=&quot;highlighter-rouge&quot;&gt;SIP Profiles&lt;/code&gt; which are a feature of &lt;code class=&quot;highlighter-rouge&quot;&gt;CUBE&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In the following example I am creating SIP profile 10 and this will serve two purposes. When the &lt;code class=&quot;highlighter-rouge&quot;&gt;sip-ua&lt;/code&gt; registers to Broadworks it will include the tgrp modification in the Contact header. The other modification must be executed though the use of a VoIP &lt;code class=&quot;highlighter-rouge&quot;&gt;dial peer&lt;/code&gt;. When the ISR/IAD sends a SIP invite to Broadworks (based on the VoIP dial peer) it will reference SIP profile 10 and include the modified statement for INVITE by injecting it into the Contact header.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
voice class sip-profiles 10
request REGISTER sip-header Contact modify “&amp;lt;sip:(.*)@(.*)&amp;gt;” “&amp;lt;sip:\1;tgrp=9494289972;trunk-context=voip.markholloway.com@\2&amp;gt;”

request INVITE sip-header Contact modify “&amp;lt;sip:(.*)@(.*)&amp;gt;” “&amp;lt;sip:\1;tgrp=9494289972;trunk-context=voip.markholloway.com@\2″

dial-peer voice 949 voip
(output omitted)
voice-class sip profiles 10

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The example profile shows that we are taking all elements from the self-generated SIP registration and adding more information.  The second part of each &lt;code class=&quot;highlighter-rouge&quot;&gt;request&lt;/code&gt; is where we inject the &lt;code class=&quot;highlighter-rouge&quot;&gt;tgrp&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;trunk-context&lt;/code&gt; information.&lt;/p&gt;

&lt;p&gt;The tgrp value in this example is the &lt;code class=&quot;highlighter-rouge&quot;&gt;Pilot User&lt;/code&gt; number &lt;code class=&quot;highlighter-rouge&quot;&gt;9494289972&lt;/code&gt;.  The value of the trunk-context is a service provider domain.&lt;/p&gt;

&lt;p&gt;This example only highlights Unscreened Calls for SIP to PRI customers using a SIP endpoint that has the ability to support RFC 4904.  There is another method which may be used by building unique &lt;code class=&quot;highlighter-rouge&quot;&gt;session agents&lt;/code&gt; on the SBC.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Configuring “packet-trace” SIP on the Acme Packet SBC</title>
   <link href="http://localhost:4000/2012/06/19/acme-packet-packet-trace/"/>
   <updated>2012-06-19T00:00:00-04:00</updated>
   <id>http://localhost:4000/2012/06/19/acme-packet-packet-trace</id>
   <content type="html">&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;packet-trace&lt;/code&gt; ACLI command allows the Acme Packet SBC (Session Director) to capture SIP signaling communication between two endpoints and send the capture to external server such as Wireshark.The SBC uses the network interfaces (ie. media interfaces) to send the capture.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;The first step is to configure a capture receiver.  This tells the SBC what interface is used for the mirrored packets and the target IP of the &lt;code class=&quot;highlighter-rouge&quot;&gt;Wireshark&lt;/code&gt; server. The network-interface is the SBC’s &lt;code class=&quot;highlighter-rouge&quot;&gt;network-interface&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;sub-port ID&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
capture-receiver
    state                   enabled
    ip-address              10.12.135.150
    network-interface       m00:0

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The next step is to identify what &lt;code class=&quot;highlighter-rouge&quot;&gt;IP&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;ports&lt;/code&gt; the SBC should listen to in order to send the packets to Wireshark. If no ports are identified then the SBC listens on all ports.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
PHOEN?IX# packet-trace start Access:0 217.154.63.10 5060 5060 
Trace start for 217.154.63.10

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Even though it is not required to specify the local and remote TCP/UDP ports  it’s always a good idea to be as specific as possible when defining captures so only the required data is captured. At this point any calls coming into the SBC that involve the &lt;code class=&quot;highlighter-rouge&quot;&gt;IP 217.154.63.10&lt;/code&gt; on &lt;code class=&quot;highlighter-rouge&quot;&gt;TCP&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;UDP&lt;/code&gt; port &lt;code class=&quot;highlighter-rouge&quot;&gt;5060&lt;/code&gt; are going to trigger the capture and packets will be sent to Wireshark. Sixteen concurrent traces can be running at once.&lt;/p&gt;

&lt;p&gt;One thing to note is the capture is sent to Wireshark using RFC 2003 (IP to IP encapsulation) as opposed to relaying SIP on port 5060. This means Wireshark needs to be configured to listen for RFC 2003 packets and then it will decode them. Use the ip.src filter to display only the encapsulated SIP packets&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Acme Packet SBC Register Grace Timer</title>
   <link href="http://localhost:4000/2012/01/24/acme-packet-sbc-register-grace-timer/"/>
   <updated>2012-01-24T00:00:00-05:00</updated>
   <id>http://localhost:4000/2012/01/24/acme-packet-sbc-register-grace-timer</id>
   <content type="html">&lt;p&gt;The Acme Packet SBC contains an optional parameter that may be added to the configuration which helps avoid a &lt;code class=&quot;highlighter-rouge&quot;&gt;SIP avalanche&lt;/code&gt; from occurring.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;One instance of a SIP avalanche is when a very large number of SIP endpoints consecutively send SIP registrations to an SBC which then forwards them to a SIP registrar. This can be dangerous for both the registrar and the SBC depending on how many endpoints are attempting to register. Assuming &lt;code class=&quot;highlighter-rouge&quot;&gt;DDoS&lt;/code&gt; is applied to the SBC configuration, it will protect itself as well as the SIP registrar from being negatively impacted by the avalanche.&lt;/p&gt;

&lt;p&gt;The following scenario shows how endpoints typically behave when they NAT through a firewall. Normally the firewall will NAT the layer 3 IP address but the layer 7 (SIP) address remains the private address. Upon receiving the NAT’d registration the SBC forwards the register message to a SIP register platform and after an exchange of a few messages between the registrar and endpoint a &lt;code class=&quot;highlighter-rouge&quot;&gt;200OK&lt;/code&gt; is sent from the registrar back to the endpoint with a register expires of 3600 seconds (default for Broadworks). The SBC knows the SIP endpoint is behind NAT and changes this timer from 3600 to something shorter (60 seconds is common).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-grace01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Envision a scenario where the Internet is experiencing a route flap which is causing endpoints to lose connectivity to the SBC. If the endpoints should register every 60 seconds and they fail to do so, the SBC will delete them from the registration cache. If perhaps five minutes later the Internet is restored and the endpoints are able to communicate with the SBC again they would have to complete the entire registration process again. This would trigger a &lt;code class=&quot;highlighter-rouge&quot;&gt;SIP avalanche&lt;/code&gt; that may negatively impact the core SIP network.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-grace02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;By implementing the option &lt;code class=&quot;highlighter-rouge&quot;&gt;register-grace-timer&lt;/code&gt; parameter to the global SIP config and specifying a number of seconds,the SBC will retain the cached entries rather than let them expire even if the endpoint registration isn’t received. Once the endpoints come back after the Internet outage is resolved and they send a SIP registration to the SBC, the SBC will not forward this to the core because the previous registration remains valid in the SBC cache. This prevents the SBC from having to go through the entire registration process thus reducing the overhead involved on both the SBC and SIP registrar.&lt;/p&gt;

&lt;p&gt;In this example the timer is set to 300 seconds. If endpoints are supposed to send their registration every 60 seconds but the SBC is not receiving them, it will retain the reg cache entry for another five minutes.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-grace03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The diagram above demonstrates that even though the Internet is restored and endpoint registrations are reaching the SBC, there is no need for the SBC to forward these registrations to the SIP registrar since the &lt;code class=&quot;highlighter-rouge&quot;&gt;reg-cache&lt;/code&gt; was retained during the outage. This prevents CPU cycles from being unnecessarily used on both the SBC and SIP registrar.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
sip-config
    state               enabled
    operations-mode     dialog
    dialog-transparency enabled
    home-realm-id       Core
...
    options             cache-challenges
                        max-register-forward=500
                        max-register-refresh=600
                        max-udp-length=0
                        reg-cache-mode=from
                        reg-overload-protect
                        register-grace-timer=300
                        reject-register-refresh
                        set-inv-exp-at-100-resp

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-grace04.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The diagram above demonstrates that even though the Internet is restored and endpoint registrations are reaching the SBC, there is no need for the SBC to forward these registrations to the SIP registrar since the reg-cache was retained during the outage. This prevents CPU cycles from being unnecessarily used on both the SBC and SIP registrar.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Acme Packet SBC Media Aggregation</title>
   <link href="http://localhost:4000/2011/11/09/acme-packet-sbc-media-aggregation/"/>
   <updated>2011-11-09T00:00:00-05:00</updated>
   <id>http://localhost:4000/2011/11/09/acme-packet-sbc-media-aggregation</id>
   <content type="html">&lt;p&gt;The Acme Packet 3800 and 4500 series Session Border Controllers come with an NIU (Network Interface Unit) that includes four Gigabit ports.  In rare cases one may need to support &lt;code class=&quot;highlighter-rouge&quot;&gt;Media Aggregation&lt;/code&gt; where two of the Gigabit interfaces need to be look like they are “bonded” to accommodate a large number of calls (with media anchored).&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;For example, a wholesale SIP Peering Service Provider may need to handle upwards of 16,000 concurrent calls on one single Realm on the SBC.  If  calls are using the G.711 codec this would require 1.5GB of bandwidth.&lt;/p&gt;

&lt;p&gt;The process used to support Media Aggregation is to assign the same Realm name to two different &lt;code class=&quot;highlighter-rouge&quot;&gt;Steering Pools&lt;/code&gt;.  For example, on the realm named &lt;code class=&quot;highlighter-rouge&quot;&gt;Access&lt;/code&gt; it would have more than one steering pool which would reference two different network-interfaces.  The same is true for the Core.  In the following example NIU ports 0 and 1 are used for Access (public facing) and 2 and 3 are used for Core (private).  Note the NIU is considered slot 0 and the ports are 0, 1, 2, 3.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-media-agg01.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/blog/assets/apkt/apkt-media-agg02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The next step is to verify you have your &lt;code class=&quot;highlighter-rouge&quot;&gt;Access&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Core&lt;/code&gt; realms configured.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-media-agg03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The final step is to create the &lt;code class=&quot;highlighter-rouge&quot;&gt;Steering Pools&lt;/code&gt; and define the &lt;code class=&quot;highlighter-rouge&quot;&gt;network-interfaces&lt;/code&gt; for each.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-media-agg04.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;At this point the SBC will utilize two ports assigned to Access and two ports assigned to Core to support media thus providing Media Aggregation. SIP signaling continues to only traverse on the sip-interfaces assigned to the Access and Core realms (s0p0 and s0p2).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-media-agg05.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;At this point the Acme Packet SBC is fully prepared to handle traffic that exceeds 1GB on a single Realm.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Acme Packet SBC sag-lookup-on-redirect</title>
   <link href="http://localhost:4000/2011/10/27/acme-packet-sbc-sag-lookup-on-redirect/"/>
   <updated>2011-10-27T00:00:00-04:00</updated>
   <id>http://localhost:4000/2011/10/27/acme-packet-sbc-sag-lookup-on-redirect</id>
   <content type="html">&lt;p&gt;In most cases a SIP Redirect Server simply responds to a SIP Invite with a &lt;code class=&quot;highlighter-rouge&quot;&gt;302 Moved Temp&lt;/code&gt; message and provides multiple contacts in the Contact Header.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;When this occurs, the device receiving the 302 Moved Temp message (such as an Acme Packet SBC) will attempt to contact (ie. send a SIP Invite) the first address in the &lt;code class=&quot;highlighter-rouge&quot;&gt;Contact Header&lt;/code&gt;.  If that fails, it will send a SIP Invite to the next address, and if that fails, the process will continue until there are no more addresses remaining.  Although this provides some form of redundancy it is not necessarily the best approach. Utilizing call flow this way means there is no control over how calls could potentially be load balanced if desired (or required).  Also, if one of the devices in the Contact Header is offline, there is no knowledge of this by the SBC and it will continue to send SIP Invites regardless and wait for the timers to expire. Definitely a less than desirable behavior.  The last item to note is that if you need to send SIP Invites to a potentially large group of servers (20 or more) there is a chance the Contact Header will become so large this is going to cause the SIP message to become fragmented.  All of these pitfalls may be easily avoided.&lt;/p&gt;

&lt;p&gt;The Acme Packet SBC has a feature called &lt;code class=&quot;highlighter-rouge&quot;&gt;sag-lookup-on-redirect&lt;/code&gt;. Simply put, the Redirect Server provides just one address in the Contact Header and the SBC will match that to a Session Agent Group in its configuration.  The result is calls may be load balanced (Hunt, Round Robin, Least Utilized, Least Busy, Proportional Distribution) and the SBC has the benefit of knowing when a target address (Session Agent) is alive and healthy which means it is in-service, or if the target is offline or unhealthy and therefore the SBC demotes it to an out-of-service state.  When a Session Agent is in an out-of-service state the SBC will not to send SIP Invites to that particular destination.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-sag-redirect.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The feature sag-lookup-on-redirect is enabled through sip-config.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
PHOENIX# configure terminal
PHOENIX(configure)# session-router
PHOENIX(session-router)# sip-config
PHOENIX(sip-config)# sag-lookup-on-redirect enabled
PHOENIX(sip-config)# done

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In order for the SBC to pro-actively determine if a Session Agent is in-service or out-of-service, configure OPTIONS ping for each Session Agent.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
session-agent
…
ping-method                    OPTIONS;hops=0
ping-interval                  60
ping-send-mode                 keep-alive

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To view what Session Agents are in-service execute the following command:&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
PHOENIX# show sipd agents

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, when the SBC receives a 302 Moved Temp message it will load balance based on the chosen scheme.  If any Session Agents are out of service the SBC will not attempt to send a SIP Invite.  The SBC waits until three successful OPTIONS pings are received before declaring an agent in service again.  This is great as it helps prevent an endpoint from flapping on the network.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Acme Packet SBC Answer Seizure Ratio Based Routing</title>
   <link href="http://localhost:4000/2011/07/25/acme-packet-sbc-answer-seizure-ratio-routing/"/>
   <updated>2011-07-25T00:00:00-04:00</updated>
   <id>http://localhost:4000/2011/07/25/acme-packet-sbc-answer-seizure-ratio-routing</id>
   <content type="html">&lt;p&gt;Answer to Seizure Ratio &lt;code class=&quot;highlighter-rouge&quot;&gt;(ASR)&lt;/code&gt; is a term used in Telecommunications and helps determine when new call setup attempt should be routed to an alternate destination. The definition of ASR is the number of successfully answered calls divided by the total number of calls attempted &lt;code class=&quot;highlighter-rouge&quot;&gt;(seizures)&lt;/code&gt; multiplied by 100. The formula is (Answer / Seizure) * 100 = AnswerSeizureRatio.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Normally when an SBC initiates a SIP Invite to a peer and receives a &lt;code class=&quot;highlighter-rouge&quot;&gt;SIP 503 Service Unavailable&lt;/code&gt; message in return the SBC will attempt another call setup to a secondary destination (Session Agent) automatically.  However, using an example such as busy signals, they not considered “failures” by a SIP device, yet there could be an upstream outage somewhere causing an unexplained amount of SIP 600 Busy messages being returned that is starving the Telecom network from completing calls. Since the Acme Packet SBC has the ability to route based on a configured ASR threshold, call may easily be routed to another destination if the configured ASR value falls below a specified threshold. Nice!&lt;/p&gt;

&lt;p&gt;The place to &lt;code class=&quot;highlighter-rouge&quot;&gt;configure ASR&lt;/code&gt; is within a &lt;code class=&quot;highlighter-rouge&quot;&gt;Session Agent&lt;/code&gt;.  By defining a minimum (acceptable) ASR value, the SBC computes ASR as it makes routing decisions.  Using the formula first mentioned above, the SBC is calculating the number of successfully answered calls on a Session Agent and dividing by the total number of calls attempted. If the ASR constraints are exceeded, the Session Agent goes out of service for a configurable period of time and all traffic is routed to a secondary Session Agent (via a Local Policy which has the same Next-Hop but with a higher cost).&lt;/p&gt;

&lt;p&gt;The two ASR parameters within a Session Agent are &lt;code class=&quot;highlighter-rouge&quot;&gt;minimum seizure&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;minimum ASR&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Minimum Seizure determines if the Session Agent is within it’s normal constraints. For example, if 5 call attempts (seizures) have been made to a Session Agent and none have been answered, and the min seizures is set to 5, then on the 6th failed attempt the Session Agent will be marked as having exceeded its constraints and will be marked out of service.&lt;/p&gt;

&lt;p&gt;Minimum ASR is considered when making routing decisions. If some or all of the calls to the Session Agent have been answered, the min ASR value is considered to make the routing decision. For example, if you set the Minimum ASR to 50% and the Session Agent’s ASR for that window falls below 50%, the Session Agent is marked as having exceeded its constraints and calls will not be routed to it until the time-to-resume has elapsed.&lt;/p&gt;

&lt;p&gt;The time-to-resume element tells the SBC how long (in seconds) a &lt;code class=&quot;highlighter-rouge&quot;&gt;Session Agent&lt;/code&gt; should be considered out of service once constraints have been exceeded.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
session-agent
...
    hostname        sip.markholloway.com
    min-seizures    5
    min-asr         50
    time-to-resume  300

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Possible values for min-seizures range from 1 to 999999999. The default value is 5.&lt;/p&gt;

&lt;p&gt;Possible percentage values for min-asr range from 0 to 100. The default is set to 0.&lt;/p&gt;

&lt;p&gt;Networks where two or more egress paths exist on the VoIP network should consider using ASR based routing to provide the greatest level of network availability during a potential network congestion-outage related issue.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Using tcpdump to troubleshoot SIP traffic</title>
   <link href="http://localhost:4000/2011/06/21/sip-tcpdump-wireshark/"/>
   <updated>2011-06-21T00:00:00-04:00</updated>
   <id>http://localhost:4000/2011/06/21/sip-tcpdump-wireshark</id>
   <content type="html">&lt;p&gt;Linux and macOS include &lt;code class=&quot;highlighter-rouge&quot;&gt;tcpdump&lt;/code&gt; which is used to capture live network traffic. With the right command options it’s easy to capture SIP call flows to view in Wireshark.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;The following command is run on Red Hat Linux and listens for SIP traffic on &lt;code class=&quot;highlighter-rouge&quot;&gt;port 5060&lt;/code&gt; of the &lt;code class=&quot;highlighter-rouge&quot;&gt;eth1&lt;/code&gt; interface.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
bwadmin@as1$ su
Password: ********
[root@as1 bwadmin]# tcpdump eth1 -w sip.pcap port 5060

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Open the pcap in Wireshark and all SIP traffic captured will be displayed. Use the following filters to view specific calls.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
sip:+4045551000@telepacific.com;tag=887s

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
tel:411

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
#show SIP packets To or From this number
sip contains 4045551000

#show SIP packets To this number
sip.To contains 4045551000

#show SIP packets From this number
sip.From contains 4045551000

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Filter by SIP call-id&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
sip.Call-ID==20badbbf750c497a80d63ebb8a74a213

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To save a specific call flow to its own pcap file user &lt;code class=&quot;highlighter-rouge&quot;&gt;Save As &amp;gt; Displayed&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you need to view SIP calls in real-time on an IP PBX or SIP Softswitch platform you can use the &lt;code class=&quot;highlighter-rouge&quot;&gt;tail&lt;/code&gt; command on the system’s log file that writes the SIP messages.&lt;/p&gt;

&lt;p&gt;Here is an example with Broadsoft BroadWorks and the XSLog file.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
bw_as1$ tail -f /var/broadworks/logs/appserver/XSLog2009.08.12-16.05.34.txt

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As BroadWorks writes to the log file the output will be displayed in real-time in the Unix shell.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Broadsoft Updgrade with Red Hat &quot;up2date&quot;</title>
   <link href="http://localhost:4000/2011/05/10/broadsoft-up2date/"/>
   <updated>2011-05-10T00:00:00-04:00</updated>
   <id>http://localhost:4000/2011/05/10/broadsoft-up2date</id>
   <content type="html">&lt;p&gt;Just over 2 months ago I started a massive project to upgrade Broadworks from Release 13 to &lt;code class=&quot;highlighter-rouge&quot;&gt;Release 14.SP8&lt;/code&gt;.  R13/R14 requires RHEL4 and there is an issue I ran into when running the &lt;code class=&quot;highlighter-rouge&quot;&gt;up2date&lt;/code&gt; process on my &lt;code class=&quot;highlighter-rouge&quot;&gt;dev&lt;/code&gt; system.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;During the initial BroadWworks installation the application changes &lt;code class=&quot;highlighter-rouge&quot;&gt;/bin/nice&lt;/code&gt; so nice may be run by &lt;code class=&quot;highlighter-rouge&quot;&gt;bwadmin&lt;/code&gt; and thus change application priority.  The up2date process installs files which change the permission of /bin/nice to be exclusively accessed by &lt;code class=&quot;highlighter-rouge&quot;&gt;root&lt;/code&gt;. This means bwadmin cannot access /bin/nice through its startup scripts.&lt;/p&gt;

&lt;p&gt;The appropraite fix for this is executing &lt;code class=&quot;highlighter-rouge&quot;&gt;chmod ug+s /bin/nice&lt;/code&gt; as &lt;code class=&quot;highlighter-rouge&quot;&gt;root&lt;/code&gt;.  After working through this issue I took the time to understand more about the &lt;code class=&quot;highlighter-rouge&quot;&gt;nice&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;renice&lt;/code&gt; process so I could have a better idea as to why it broke.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Broadsoft Cluster Nodes &quot;Out of Sync&quot;</title>
   <link href="http://localhost:4000/2011/05/10/broadsoft-out-of-sync/"/>
   <updated>2011-05-10T00:00:00-04:00</updated>
   <id>http://localhost:4000/2011/05/10/broadsoft-out-of-sync</id>
   <content type="html">&lt;p&gt;I am in the process of fixing two cluster installations which were originally performed by a third party consulting group.  The &lt;code class=&quot;highlighter-rouge&quot;&gt;peerctl&lt;/code&gt; lists were not setup correctly and thus replication is not working from the primary node to the secondary node on either platform.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;There are a few tasks you can perform to validate whether &lt;code class=&quot;highlighter-rouge&quot;&gt;replication&lt;/code&gt; to your secondary nodes are healthy.  First, ensure &lt;code class=&quot;highlighter-rouge&quot;&gt;dbSyncCheck&lt;/code&gt; is running in the maintenance scheduler for all AS and NS nodes.  Second, verify whether you are receiving alarms from your cluster nodes stating the datbase is out of sync.  Third, see if you can perform an &lt;code class=&quot;highlighter-rouge&quot;&gt;importdb.pl&lt;/code&gt; on the secondary node without it failing.  In the event your platform is not in sync or importdb.pl fails, you must reconfigure the &lt;code class=&quot;highlighter-rouge&quot;&gt;peerctl&lt;/code&gt; list on the primary server.  This example assumes your are setting the peerctl list for an application server cluster.&lt;/p&gt;

&lt;p&gt;** On the primary AS&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
peerctl set &amp;lt;old peerctl name&amp;gt; &amp;lt;hostname&amp;gt; &amp;lt;ipaddress&amp;gt; | example: peerctl set as1.markholloway.com as1 192.168.1.10
peerctl set &amp;lt;old peerctl name&amp;gt; &amp;lt;hostname&amp;gt; &amp;lt;ipaddress&amp;gt; | example: peerctl set as2.markholloway.com as2 192.168.1.11
peerctl setprimary as1
repctl restart
bwBackup.pl AppServer db-JAN-11-2009.db
scp db-JAN-11-2009.db as bwadmin to as2
 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;** On the secondary AS&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
repctl stop
stopbw
bwRestore.pl AppServer db-JAN-11-2009.db
importdb.pl AppServer 192.168.1.10 | Verifies importdb.pl works as expected

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You will now have proper &lt;code class=&quot;highlighter-rouge&quot;&gt;replication&lt;/code&gt; between your primary and secondary nodes.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Testing SIP Header Manipulation Rules from the Acme Packet (ACLI) Command Line</title>
   <link href="http://localhost:4000/2011/05/09/acme-packet-sbc-testing-sip-hmr/"/>
   <updated>2011-05-09T00:00:00-04:00</updated>
   <id>http://localhost:4000/2011/05/09/acme-packet-sbc-testing-sip-hmr</id>
   <content type="html">&lt;p&gt;SIP Header Manipulation provides the flexibility to add, remove, or modify any attribute in a SIP message on the Acme Packet SBC. The most common reason for doing this is to fix an incompatibility problem between two SIP endpoints. This could range from anything such as Softswitch/PSTN incompatibility or an issue between two different IP PBX platforms in a multi-site Enterprise where calls between them fail due to issues in the SIP messaging.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;In the past there was no straight forward way to test SIP Header Manipulation Rules other than performing save/activate and manually placing test calls to see if the HMR worked.&lt;/p&gt;

&lt;p&gt;The example below is a case where an HMR needed to be written to route calls based on the Charge Number in the SIP Invite rather than routing on the Request-URI, TO, or FROM numbers. Because BroadWorks R14 uses a proprietary charge number header it is required to have one rule that looks at the number in the charge number header and stores that value using a store-action, then through the use of a second rule pastes the number as cn=4804563000 into the Request-URI then use a local-policy to route the call based on the cn= value.&lt;/p&gt;

&lt;p&gt;The original SIP Invite from BroadWorks looks like this.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
INVITE sip:+18005551212@sip.markholloway.com:5060;user=phone SIP/2.0
From:”John Smith”&amp;lt;sip:4804814001@voip.markholloway.com;user=phone&amp;gt;;tag=1121176714-1301523646656-
To:&amp;lt;sip:+18005551212@sip.markholloway.com:5060;user=phone&amp;gt;
Call-ID:BW1520466563003111177145372@10.12.135.140
CSeq:74277985 INVITE
Contact:&amp;lt;sip:10.12.135.100:5060&amp;gt;
Privacy:none
Allow:ACK,BYE,CANCEL,INFO,INVITE,OPTIONS,PRACK,REFER,NOTIFY
Accept:multipart/mixed,application/media_control+xml,application/sdp
Charge:&amp;lt;tel:4804563000&amp;gt;;noa=clgp-ani-natl-num
Supported:
Max-Forwards:10
Content-Type:application/sdp
Content-Length:255

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The goal is to Route based on the Charge Number not the Request URI, To, or From numbers.  An HMR on the Session Director must be created to extract 4804563000 from the Charge Number header and insert it in the Request URI as a cn=4804563000.&lt;/p&gt;

&lt;p&gt;Here is the HMR for copying the number from the Charge Number header and inserting it as a cn= parameter in the Request URI. Note this is one sip-manipulation that contains two rules.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/test-hmr-01.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The HMR may be tested directly within the ACLI by pasting in ASCII text that contains the original message of which the SD will manipulate.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/test-hmr-02.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The next step is set debugging enabled (from within test-sip-manipulation), show the sip-manipulation you are about to test (always good for verification), and then execute the test.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/test-hmr-03.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The SD shows the debug output of the original SIP Invite that was pasted in ASCII.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/test-hmr-04.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The SD now presents the newly manipulated SIP Invite.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/test-hmr-05.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Acme Packet SBC and Configuring Codec Policies for SIP Call Flows</title>
   <link href="http://localhost:4000/2011/02/20/acme-packet-sbc-code-policy/"/>
   <updated>2011-02-20T00:00:00-05:00</updated>
   <id>http://localhost:4000/2011/02/20/acme-packet-sbc-code-policy</id>
   <content type="html">&lt;p&gt;The Acme Packet Session Director (often referred to as a Session Border Controller) has the flexibility of re-ordering or completely removing certain codecs from SDP (Session Description Protocol) before passing a SIP Invite to the destination SIP endpoint.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Codec re-ordering or stripping is useful in cases where the originating device may be sending a particular codec that is not supported (or preferred) by the far.  For example, a SIP peering destination may only allow certain codecs to be contained in SIP Invites originating from your network.  If a device is sending G722, G711, G726, and G729 but the far end explicitly states only G722 and G711 are permitted, a policy must exist somewhere in the network that complies with the requirements of the far end.  Some SIP endpoints provide control over which codecs are permitted in SDP, but this is not always the case and therefore the Acme Session Director is able to provide global enforcement over all endpoints to ensure they comply.  Using the SD also drastically simplifies SIP endpoint management by avoiding tedious configuration of individual configurations for various devices.&lt;/p&gt;

&lt;p&gt;The Session Director has the ability to perform codec policy enforcement on an incoming policy or an outgoing policy. The incoming policy is great if you want to achieve the same result for every incoming call regardless of what realm the call will egress.  Configuring on the egress allows customization where perhaps one realm may order the codec list one way while another realm orders the codec list another way as the call leaves the Session Director depending on which destination the SIP Invite is sent to.&lt;/p&gt;

&lt;p&gt;The diagram illustrates the scenario above where an endpoint is sending more codec than what is permitted by the far end. The Acme Session Director has the ability to re-write the SDP before sending the SIP Invite to the far end.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/apkt/apkt-codec-policy.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;First, start by going into configuration mode and enter the codec-policy configuration.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
lab-sd4500# conf t
lab-sd4500(configure)# media-manager
lab-sd4500(media-manager)# codec-policy
lab-sd4500(codec-policy)# &amp;lt;policy name&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This very basic example allows all codecs in the SDP to pass through. The * symbol represents a wildcard. This is effectively the same as having no codec policy.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
lab-sd4500(codec-policy)# allow-codecs *

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The next example allows all codecs except for G729 to pass through.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
lab-sd4500(codec-policy)# allow-codecs * G729:no

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The next example removes all codecs from the SDP.  If the far end device is in compliance with RFC 3264 (offer/answer with SDP) it will supply a new SDP in response to the SIP Invite.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
lab-sd4500(codec-policy)# allow-codecs * audio:no

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The next example demonstrates a SIP endpoint that originates a SIP Invite which contains G711 and G729, but only G729 should be passed to the far end. However, if the originating device had sent a SIP Invite that contains G711 but does not contain G729 then G711 is permitted to be included in the SDP to the far end SIP endpoint.  Essentially, the word force is stating that if G729 is present in the original Invite, regardless of whether G711 is present, then only send G729 to the far end. If G729 is not present but G711 is present, go ahead and send G711.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
lab-sd4500(codec-policy)# allow PCMU G729:force

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next is an example of a codec-policy which needs to be associated with a Session Agent (ie. target SIP endpoint such as a PSTN SIP Peering Provider, also referred to as an ITSP) or a Realm. The purpose of this policy is to strip G726 from SDP as well as strip any video offering. The policy is given a name which references its actual purpose. This is something I tend to do quite frequently on the SD as the configuration can get quite large and this helps keep track of policies. The end result is that G711 will be the preferred codec offered in SDP to the ITSP.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
codec-policy
    name s          trip-726-video
    allow-codecs    g726:no pcmu video:no
    order-codecs    pcmu

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After creating the codec-policy above we may associate it with a Session Agent so it is enforced.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
lab-sd4500# configure terminal
lab-sd4500(configure)# session-router
lab-sd4500(session-router)# session-agent
lab-sd4500(session-agent)# select

1. ITSP A
2. ITSP B
3. ITSP C

&amp;gt; 3

lab-sd4500(session-agent)# codec-policy strip-726-video
lab-sd4500(session-agent)# done
lab-sd4500(session-agent)# exit
lab-sd4500(session-router)# exit
lab-sd4500(configure)# exit
lab-sd4500# save-config
lab-sd4500# verify-config
No errors found
lab-sd4500# activate-config

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Associating the policy with a Session Agent means all calls which traverse through that particular Session Agent will have the codec-policy enforced.  If the policy should be Realm specific rather than Session Agent specific then perform the following instead.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
lab-sd4500# configure terminal
lab-sd4500(configure)# media-manager
lab-sd4500(media-manager)# realm-config
lab-sd4500(realm-config)# select

1. Access
2. Core
3. Peering ITSP Core

&amp;gt; 3

lab-sd4500(realm-config)# codec-manip-in-realm strip-726-video
lab-sd4500(realm-config)# done
lab-sd4500(realm-config)# exit
lab-sd4500(media-manager)# exit
lab-sd4500(configure)# exit
lab-sd4500# save-config
lab-sd4500# verify-config
No errors found
lab-sd4500# activate-config

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The examples provided only scratch the surface and are a basic introduction to the topic of codec policies. All of this and more may be found in the ACLI documentation. The Session Director is an incredibly flexible platform and I continuously find it fascinating how granular one can get when it comes to controlling their voice network.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Acme Packet SBC and Useful ACLI Commands</title>
   <link href="http://localhost:4000/2011/01/21/acme-packet-sbc-acli-useful-commands/"/>
   <updated>2011-01-21T00:00:00-05:00</updated>
   <id>http://localhost:4000/2011/01/21/acme-packet-sbc-acli-useful-commands</id>
   <content type="html">&lt;p&gt;Recently someone asked what some of the most useful commands are on the Session Director after performing a fresh install/configuration of an SD.  The following was provided by one of the Acme Packet Systems Engineers in response to the inquiry.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;show sipd sessions all&lt;/code&gt; – Will display all of the active SIP sessions that are currently traversing the SBC, including the To, From, Call-ID&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;show sipd invite&lt;/code&gt; – Will display a chart of all recent SIP requests and responses&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;notify sipd siplog&lt;/code&gt; – Enables the sipmsg.log which includes all SIP traffic traversing the SBC..only to be used in pre-production/trial environment&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;show logfile sipmsg.log&lt;/code&gt; – Will output the contents of the sipmsg.log without having to FTP this file off the SBC&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;notify sipd rotate-logs&lt;/code&gt; – Will clear all sipd log buffers&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;display-alarms&lt;/code&gt; – Alarm log output&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;show running-config&lt;/code&gt; – Outputs all of the configuration elements&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;show support-info&lt;/code&gt; -  Outputs all of the system level info, including hardware specifics, licensing info, etc&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;show health&lt;/code&gt; – For a standalone system will give a good overview of failover history&lt;/p&gt;

&lt;p&gt;I would also like to add the following which I think are useful in some cases.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;show prom-info all&lt;/code&gt; – Displays serial number, hardware revision, manufacturing date&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;notify sipd debug&lt;/code&gt; – Enables a subset of the full logging behavior of sipd on the Session Director&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;notify sip nodebug&lt;/code&gt; - Turn off debug&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;log-level sipd debug&lt;/code&gt; – Enable full debug logs&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;log-level sipd notice&lt;/code&gt; – Turn off full debug&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;show version&lt;/code&gt; - Displays SBC current software version&lt;/p&gt;

&lt;p&gt;The log file generated in both cases is log.sipd&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Broadsoft Extreme Overload Controls</title>
   <link href="http://localhost:4000/2010/05/27/broadsoft-overload/"/>
   <updated>2010-05-27T00:00:00-04:00</updated>
   <id>http://localhost:4000/2010/05/27/broadsoft-overload</id>
   <content type="html">&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;BroadWorks&lt;/code&gt; platform uses an enhanced algorithm called Overload Control to offer protection when a cluster node is under severe conditions. The goal is that during an overload period of 150% the throughput will be no less than 90%.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Behavior of the &lt;code class=&quot;highlighter-rouge&quot;&gt;Application Server&lt;/code&gt; is dependent upon a series of configuration parameters configured through &lt;code class=&quot;highlighter-rouge&quot;&gt;bwcli&lt;/code&gt;.  Extreme overload control provides message throttling at the decoding and encoding queues. The maximum packet age used during overload is different from that used during non-overload. Both the maximum packet age and maximum packet age during overload are configurable via the CLI.&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
AS_CLI/System/OverloadControls&amp;gt; get
enabled = true
mgcpOverloadAction = error
sipOverloadAction = error
percentMemoryInUseToEnterYellow = 85
percentMemoryInUseToEnterRed = 90
percentMemoryInUseToLeaveYellow = 85
percentMemoryInUseToLeaveRed = 85
allowEmergencyCallsInOverload = true
maxPacketAgeInMsecs = 3000
maxPacketAgeDuringOverloadInMsecs = 1500

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;One of the most critical parameters to configure is the &lt;code class=&quot;highlighter-rouge&quot;&gt;sipOverloadAction&lt;/code&gt;.  This determines how Broadworks will respond during a period of an Overload. The three possible options are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;drop (silently discarded)&lt;/li&gt;
  &lt;li&gt;redirect (302 Move Temp)&lt;/li&gt;
  &lt;li&gt;error (503 Service Unavailable)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I do not recommend using &lt;code class=&quot;highlighter-rouge&quot;&gt;drop&lt;/code&gt; as this is the least graceful approach and will cause the User Agent Client to rely on its SIP expiration timer before initiating additional SIP messages.  While &lt;code class=&quot;highlighter-rouge&quot;&gt;error&lt;/code&gt; should be a viable option it does not guarantee the UAC will reattempt another SIP invite upon receiving a SIP 503 Service Unavailable message.  My recommendation and current best-practice is to use &lt;code class=&quot;highlighter-rouge&quot;&gt;redirect&lt;/code&gt;.  The Broadworks Application Server (AS1) will respond to the UAC with the address of the secondary Application Server (AS2) in the &lt;code class=&quot;highlighter-rouge&quot;&gt;SIP contact header&lt;/code&gt;. The remaining dialog between the UAC and UAS will be carried out through AS2.&lt;/p&gt;

&lt;p&gt;** NOTE: Registration Time Extension&lt;/p&gt;

&lt;p&gt;During overload a &lt;code class=&quot;highlighter-rouge&quot;&gt;SIP REGISTER&lt;/code&gt; messages may be discarded. To reduce the chances that a user’s registration is no longer valid (and cannot receive or possibly make calls), the extension should be set based on expected overload time, which is typically at least twice the non-callp minimum time in zone.&lt;/p&gt;

&lt;p&gt;** Emergency Calls&lt;/p&gt;

&lt;p&gt;If the system is configured to allow emergency calls during overload, then originations matching the call type &lt;code class=&quot;highlighter-rouge&quot;&gt;Emergency&lt;/code&gt; in the system calling plan are allowed to progress.&lt;/p&gt;

&lt;p&gt;** Summary&lt;/p&gt;

&lt;p&gt;Extreme Overload Controls are an important element for all Broadworks deployments. Setting the proper thresholds between the &lt;code class=&quot;highlighter-rouge&quot;&gt;Yellow&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Red Zones&lt;/code&gt; will provide the appropriate alarming and graceful call redirection while at the same time notifying an administrator when the platform is reaching its capacity for growth.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Acme Packet SBC SIP Header Manipulation Rules</title>
   <link href="http://localhost:4000/2010/04/23/apkt-sip-header-manipulation/"/>
   <updated>2010-04-23T00:00:00-04:00</updated>
   <id>http://localhost:4000/2010/04/23/apkt-sip-header-manipulation</id>
   <content type="html">&lt;p&gt;This is an example of how to &lt;code class=&quot;highlighter-rouge&quot;&gt;modify a SIP header&lt;/code&gt; with an Acme Packet Session Border Controller (SBC).  An SBC is a device most commonly used by Service Providers and Enterprises to provide topology hiding between a SIP platform and an untrusted SIP network.  In the most simplistic terms think of it as a Cisco PIX or ASA but explicitly dedicated to Voice over IP (SIP, H.323, MGCP).&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;This &lt;code class=&quot;highlighter-rouge&quot;&gt;HMR&lt;/code&gt; provides the ability to populate Call Detail Record VSA’s with info from a SIP Header Manipulation Rule. It lets the HMR &lt;code class=&quot;highlighter-rouge&quot;&gt;copy header content&lt;/code&gt; from the SIP message into one of thirty CDR fields of your choosing and works for RADIUS and CSV file CDR formats using &lt;code class=&quot;highlighter-rouge&quot;&gt;VSA number range&lt;/code&gt; of 200-229 reserved for customer-specific requirements.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
header-rule

    name                storeDiversion
    header-name         Diversion
    action              store
    comparison-type     pattern-rule
    match-value 
    msg-type            request
    new-value methods   INVITE

    name                generateVSA200
    header-name         P-Acme-VSA
    action              add
    comparison-type     boolean
    match-value         $storeDiversion
    msg-type            any
    new-value           200:+$storeDiversion.$0
    new-value methods   INVITE

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
In this example a Nortel CS2K sends `m=audio` and `m=image` in a single SIP Invite which breaks Cisco ISR Faxing.
An HMR is required to set `SDP` m=audio and m=image to `0` only when both are present. HMR cannot take
effect when only one is present otherwise the FAX will fail.

sip-manipulation
        name                           setSdp
        description                    
        split-headers                  
        join-headers                  
        header-rule
                name                           setSdpZero
                header-name                    content-type
                action                         manipulate
                comparison-type                case-sensitive
                msg-type                       request
                methods                        INVITE
                match-value                    
                new-value                      
                element-rule
                        name                           setSdpZeroRule
                        parameter-name                 application/sdp
                        type                           mime
                        action                         find-replace-all
                        match-val-type                 any
                        comparison-type                pattern-rule
                        match-value                    m=audio\,*m=image([0-9]{1,5}).udptl[[:1:]]
                        new-value                      0
                        


INVITE sip:8088881491@voip.hawaiiantel.net:5060 SIP/2.0
Via: SIP/2.0/UDP 172.20.20.1:5060;branch=z9hG4bKuucm4i10cg21fh8id4b0.1
Record-Route: &amp;lt;sip:8088881491@172.20.20.1;lr&amp;gt;
From: &amp;lt;sip:8085463052@172.20.20.1:5060;user=phone&amp;gt;;tag=1688407842-1296205260165-
To: &quot;A5_Lab Fax&quot; &amp;lt;sip:8088881491@172.20.20.1:5060&amp;gt;
Call-ID: BW230100165270111358024115@113.52.63.7
CSeq: 636310211 INVITE
Contact: &amp;lt;sip:8085463052@172.20.20.1:5060;transport=udp&amp;gt;
Supported: 100rel
Max-forwards: 69
Allow: ACK, BYE, CANCEL, INFO, INVITE, OPTIONS, PRACK, REFER, NOTIFY, UPDATE
Content-Type: application/sdp
Accept: multipart/mixed, application/media_control+xml, application/sdp
Content-Length:   257
 
v=0
o=BroadWorks 644472 1 IN IP4 172.20.20.1
s=-
c=IN IP4 172.20.20.1
t=0 0
m=audio 16480 RTP/AVP 0 8 18 101
a=ptime:20
a=fmtp:18 annexb=no
a=rtpmap:101 telephone-event/8000
a=fmtp:101 0-15
m=image 16484 udptl t38
a=T38FaxUdpEC:t38UDPRedundancy
 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Resizing the Broadsoft Datastore</title>
   <link href="http://localhost:4000/2009/10/09/broadsoft-resizing-datastore/"/>
   <updated>2009-10-09T00:00:00-04:00</updated>
   <id>http://localhost:4000/2009/10/09/broadsoft-resizing-datastore</id>
   <content type="html">&lt;p&gt;As the database grows on the BroadWorks Application and Network servers there will be a need to change the &lt;code class=&quot;highlighter-rouge&quot;&gt;memory allocation&lt;/code&gt; for the &lt;code class=&quot;highlighter-rouge&quot;&gt;TimesTen&lt;/code&gt; datastore.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;The rule of thumb is the allocated &lt;code class=&quot;highlighter-rouge&quot;&gt;perm&lt;/code&gt; size should not exceed more than 25% of total system memory and the &lt;code class=&quot;highlighter-rouge&quot;&gt;temp&lt;/code&gt; size should be equal to 25% of the perm size.&lt;/p&gt;

&lt;p&gt;The following example assumes 8GB of memory on both AS1 and AS2.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
1. SSH to AS1 as bwadmin
2. stopbw
3. repctl stop
4. su as root
5. cd /usr/local/broadworks/bw_base/bin
6. timesten.pl unload
7. ./resizeDSN (perm=2048; temp=512)
8. exit (return to bwadmin)
9. repctl start
10. startbw

– Wait 10 minutes for buffered replication changes from AS2 –

1. SSH to AS2 as bwadmin
2. stopbw
3. repctl stop
4. su as root
5. cd /usr/local/broadworks/bw_base/bin
6. timesten.pl unload
7. ./resizeDSN (perm=2047; temp=512)
8. exit (return to bwadmin)
9. importdb.pl AppServer as1 AppServer (replace as1 with your primary AS hostname or IP)
10. repctl start
11. startbw

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If everything went smoothly you should be able to run &lt;code class=&quot;highlighter-rouge&quot;&gt;sychcheck_basic.pl -a&lt;/code&gt; on AS2 and the database should show synchronized. If the &lt;code class=&quot;highlighter-rouge&quot;&gt;importdb.pl&lt;/code&gt; command in step 9 was unable to import the database, you will need to manually perform the backup and restore procedure as shown below.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
1. On AS1: bwBackup.pl AppServer dbBackup.db
2. scp the file to AS2: scp dbBackup.db bwadmin@as2:dbBackup.db
3. On AS2: stopbw
4. repctl stop
5. bwRestore.pl AppServer dbBackup.db
6. repctl start
7. startbw

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;On one other occasion AS1 would not start &lt;code class=&quot;highlighter-rouge&quot;&gt;replication&lt;/code&gt; after resizing the &lt;code class=&quot;highlighter-rouge&quot;&gt;DSN&lt;/code&gt; due to an error which stated AS2 was on a different patch version than AS1. The two nodes were patched identical, but the patch tool was not responding on AS2 and therefore AS1 could not verify appropriately thus reporting the error. The solution was simply &lt;code class=&quot;highlighter-rouge&quot;&gt;restarting&lt;/code&gt; the patch tool.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
as2$ stoppt.pl
as2$ startpt.pl

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Broadsoft R14.SP9 Generic SIP Smart Proxy bug</title>
   <link href="http://localhost:4000/2009/09/18/broadsoft-sip-smart-proxy/"/>
   <updated>2009-09-18T00:00:00-04:00</updated>
   <id>http://localhost:4000/2009/09/18/broadsoft-sip-smart-proxy</id>
   <content type="html">&lt;p&gt;I ran across this during an upgrade from &lt;code class=&quot;highlighter-rouge&quot;&gt;Broadworks R14.SP8 to SP9&lt;/code&gt;.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;BroadWorks appears to contain a bug when using the &lt;code class=&quot;highlighter-rouge&quot;&gt;Generic SIP Smart Proxy&lt;/code&gt; device in SP9. At the time I am writing this post Broadsoft TAC has not officially acknowledged this as a bug.  The behavior did not exist in any prior version of Broadworks and I am confident Broadsoft Engineering did not intend this behavior to occur.&lt;/p&gt;

&lt;p&gt;In this particular scenario there is an Acme Packet SBC between a &lt;code class=&quot;highlighter-rouge&quot;&gt;SIP endpoint&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;BroadWorks&lt;/code&gt;. SIP registration traverses through the SBC and rewrites the &lt;code class=&quot;highlighter-rouge&quot;&gt;SIP URI&lt;/code&gt; which contains a cookie in the &lt;code class=&quot;highlighter-rouge&quot;&gt;SD-Contact&lt;/code&gt; after the phone number &lt;code class=&quot;highlighter-rouge&quot;&gt;7025551234&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
acme01# show sip endpoint-ip 7025551234
User &amp;lt;sip:7025551234@65.110.156.250&amp;gt;
Contact ID=98488082 exp=1819
UA-Contact: UDP
realm=Access local=65.110.156.250:5060 UA=63.110.156.130:4618
SD-Contact: &amp;lt;sip:7025551234-rjbrh1f7n2m68@10.110.156.250:5060&amp;gt; realm=Core
Call-ID: MjVhYjQxZTcyMDA3ZDAyODAwMzA1NTI5MzFjNzU3MjE.’
SA=10.110.156.250  &amp;lt;– Broadworks AS
Via-Key: 63.110.156.130:4618#Access!sip:7025551234@63.110.156.130:4618!

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In Broadworks the SIP registration for this number would show the SIP URI exactly as it appears with the cookie.  However, with SP9 Broadworks sets up a SIP invite to the number and sends &lt;code class=&quot;highlighter-rouge&quot;&gt;7025551234@10.110.156.250:5060&lt;/code&gt; rather than &lt;code class=&quot;highlighter-rouge&quot;&gt;sip:7025551234-rjbrh1f7n2m68@10.110.156.250:5060&lt;/code&gt;.  The cookie portion of the URI is missing and the SBC responds with a 604 global failure response.&lt;/p&gt;

&lt;p&gt;Sheer luck would have it that enabling the &lt;code class=&quot;highlighter-rouge&quot;&gt;Use Business Trunking Contact&lt;/code&gt; under System &amp;gt; Resources &amp;gt; Identity/Device Profile Types would clear up the issue.  Otherwise each number for every BroadWorks Group using &lt;code class=&quot;highlighter-rouge&quot;&gt;GSSP&lt;/code&gt; would need to be reassigned to another Device type in Broadworks and would be service impacting.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>How to Fix &quot;No Schema Found&quot; in Broadsoft</title>
   <link href="http://localhost:4000/2009/03/10/broadsoft-no-schema-found/"/>
   <updated>2009-03-10T00:00:00-04:00</updated>
   <id>http://localhost:4000/2009/03/10/broadsoft-no-schema-found</id>
   <content type="html">&lt;p&gt;Broadworks failed to create the patch database on my primary application node after the R13 to R14 upgrade completed. When accessing the patching menu in &lt;code class=&quot;highlighter-rouge&quot;&gt;bwcli&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;listpatch.pl&lt;/code&gt; in Linux, it returns &lt;code class=&quot;highlighter-rouge&quot;&gt;No Schema Found&lt;/code&gt;.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;The second AS node in the cluster is ok and recognizes the &lt;code class=&quot;highlighter-rouge&quot;&gt;patch bundle&lt;/code&gt;, but this is irellevant since the first node needs to be patched before patching to second node.   There is a way to recover from this by executing the following commands.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
bwadmin@as1$ cd /usr/local/broadworks/patchtool/sbin
bwadmin@as1$ ./listPatch.pl

Patch Name State
====================

No schema found.
bwadmin@as1$ ./createDSN.pl WS_Rel_14.sp8_1.57/createDSN.pl AS_Rel_14.sp8_1.57

bwadmin@as1$ ./listPatch.pl
Patch Name State
======================
listPatch command successfully executed.

AS_CLI/Maintenance/Patching&amp;gt; 8
Please wait while the database is updating (this could take up to a few
minutes depending on the number of patches and the activity on the server).

…………………………………………………
AS_CLI/Maintenance/Patching&amp;gt; listBundle
Patch Bundle Name
=========================
PB.as.14.sp8.57.pb20081201
1 entry found.

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The same procedure may be used with &lt;code class=&quot;highlighter-rouge&quot;&gt;any&lt;/code&gt; of the Broadworks servers.  I had the same issue with both external web servers as well.&lt;/p&gt;

</content>
 </entry>
 

</feed>